import{_ as r,C as o,c as p,o as d,ai as l,j as i,G as e,a as t,w as n}from"./chunks/framework.CzQlo9XL.js";const Ii=JSON.parse('{"title":"Comrade API","description":"","frontmatter":{},"headers":[],"relativePath":"api.md","filePath":"api.md","lastUpdated":null}'),h={name:"api.md"},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},D={class:"jldocstring custom-block",open:""},x={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},Fs={class:"jldocstring custom-block",open:""},_s={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},As={class:"jldocstring custom-block",open:""},js={class:"jldocstring custom-block",open:""},vs={class:"jldocstring custom-block",open:""},Ds={class:"jldocstring custom-block",open:""},xs={class:"jldocstring custom-block",open:""},Ss={class:"jldocstring custom-block",open:""},Bs={class:"jldocstring custom-block",open:""},Is={class:"jldocstring custom-block",open:""},Ps={class:"jldocstring custom-block",open:""},Vs={class:"jldocstring custom-block",open:""},Ls={class:"jldocstring custom-block",open:""},ws={class:"jldocstring custom-block",open:""},Ms={class:"jldocstring custom-block",open:""},Rs={class:"jldocstring custom-block",open:""},Os={class:"jldocstring custom-block",open:""},Ns={class:"jldocstring custom-block",open:""},Hs={class:"jldocstring custom-block",open:""},Js={class:"jldocstring custom-block",open:""},qs={class:"jldocstring custom-block",open:""},Gs={class:"jldocstring custom-block",open:""},zs={class:"jldocstring custom-block",open:""},Us={class:"jldocstring custom-block",open:""},Ks={class:"jldocstring custom-block",open:""},Ws={class:"jldocstring custom-block",open:""},$s={class:"jldocstring custom-block",open:""},Xs={class:"jldocstring custom-block",open:""},Ys={class:"jldocstring custom-block",open:""},Qs={class:"jldocstring custom-block",open:""},Zs={class:"jldocstring custom-block",open:""},si={class:"jldocstring custom-block",open:""},ii={class:"jldocstring custom-block",open:""},ai={class:"jldocstring custom-block",open:""},ei={class:"jldocstring custom-block",open:""},ti={class:"jldocstring custom-block",open:""},li={class:"jldocstring custom-block",open:""},ni={class:"jldocstring custom-block",open:""},ri={class:"jldocstring custom-block",open:""},oi={class:"jldocstring custom-block",open:""},pi={class:"jldocstring custom-block",open:""},di={class:"jldocstring custom-block",open:""},hi={class:"jldocstring custom-block",open:""},ki={class:"jldocstring custom-block",open:""},gi={class:"jldocstring custom-block",open:""},ci={class:"jldocstring custom-block",open:""},bi={class:"jldocstring custom-block",open:""},ui={class:"jldocstring custom-block",open:""},yi={class:"jldocstring custom-block",open:""},mi={class:"jldocstring custom-block",open:""},Ei={class:"jldocstring custom-block",open:""},Ci={class:"jldocstring custom-block",open:""},fi={class:"jldocstring custom-block",open:""},Fi={class:"jldocstring custom-block",open:""},_i={class:"jldocstring custom-block",open:""},Ti={class:"jldocstring custom-block",open:""};function Ai(ji,s,vi,Di,xi,Si){const a=o("Badge");return d(),p("div",null,[s[490]||(s[490]=l('<h1 id="Comrade-API" tabindex="-1">Comrade API <a class="header-anchor" href="#Comrade-API" aria-label="Permalink to &quot;Comrade API {#Comrade-API}&quot;">​</a></h1><h2 id="Index" tabindex="-1">Index <a class="header-anchor" href="#Index" aria-label="Permalink to &quot;Index {#Index}&quot;">​</a></h2><ul><li><a href="#Comrade.Comrade"><code>Comrade.Comrade</code></a></li><li><a href="#Comrade.AbstractArrayConfiguration"><code>Comrade.AbstractArrayConfiguration</code></a></li><li><a href="#Comrade.AbstractInstrumentModel"><code>Comrade.AbstractInstrumentModel</code></a></li><li><a href="#Comrade.AbstractObservationTable"><code>Comrade.AbstractObservationTable</code></a></li><li><a href="#Comrade.AbstractSkyModel"><code>Comrade.AbstractSkyModel</code></a></li><li><a href="#Comrade.AbstractVLBIPosterior"><code>Comrade.AbstractVLBIPosterior</code></a></li><li><a href="#Comrade.AbstractVLBITable"><code>Comrade.AbstractVLBITable</code></a></li><li><a href="#Comrade.AbstractVisibilityDatum"><code>Comrade.AbstractVisibilityDatum</code></a></li><li><a href="#Comrade.ArrayPrior"><code>Comrade.ArrayPrior</code></a></li><li><a href="#Comrade.CalTable"><code>Comrade.CalTable</code></a></li><li><a href="#Comrade.ClosureConfig"><code>Comrade.ClosureConfig</code></a></li><li><a href="#Comrade.ClosurePhases"><code>Comrade.ClosurePhases</code></a></li><li><a href="#Comrade.Coherencies"><code>Comrade.Coherencies</code></a></li><li><a href="#Comrade.DiskStore"><code>Comrade.DiskStore</code></a></li><li><a href="#Comrade.EHTArrayBaselineDatum"><code>Comrade.EHTArrayBaselineDatum</code></a></li><li><a href="#Comrade.EHTArrayConfiguration"><code>Comrade.EHTArrayConfiguration</code></a></li><li><a href="#Comrade.EHTClosurePhaseDatum"><code>Comrade.EHTClosurePhaseDatum</code></a></li><li><a href="#Comrade.EHTCoherencyDatum"><code>Comrade.EHTCoherencyDatum</code></a></li><li><a href="#Comrade.EHTLogClosureAmplitudeDatum"><code>Comrade.EHTLogClosureAmplitudeDatum</code></a></li><li><a href="#Comrade.EHTObservationTable"><code>Comrade.EHTObservationTable</code></a></li><li><a href="#Comrade.EHTVisibilityAmplitudeDatum"><code>Comrade.EHTVisibilityAmplitudeDatum</code></a></li><li><a href="#Comrade.EHTVisibilityDatum"><code>Comrade.EHTVisibilityDatum</code></a></li><li><a href="#Comrade.FixedSkyModel"><code>Comrade.FixedSkyModel</code></a></li><li><a href="#Comrade.GenericJones"><code>Comrade.GenericJones</code></a></li><li><a href="#Comrade.IIDSitePrior"><code>Comrade.IIDSitePrior</code></a></li><li><a href="#Comrade.IdealInstrumentModel"><code>Comrade.IdealInstrumentModel</code></a></li><li><a href="#Comrade.InstrumentModel"><code>Comrade.InstrumentModel</code></a></li><li><a href="#Comrade.IntegSeg"><code>Comrade.IntegSeg</code></a></li><li><a href="#Comrade.JonesD"><code>Comrade.JonesD</code></a></li><li><a href="#Comrade.JonesF"><code>Comrade.JonesF</code></a></li><li><a href="#Comrade.JonesG"><code>Comrade.JonesG</code></a></li><li><a href="#Comrade.JonesR"><code>Comrade.JonesR</code></a></li><li><a href="#Comrade.JonesSandwich"><code>Comrade.JonesSandwich</code></a></li><li><a href="#Comrade.LogClosureAmplitudes"><code>Comrade.LogClosureAmplitudes</code></a></li><li><a href="#Comrade.MemoryStore"><code>Comrade.MemoryStore</code></a></li><li><a href="#Comrade.MultiSkyModel"><code>Comrade.MultiSkyModel</code></a></li><li><a href="#Comrade.ObservedSkyModel"><code>Comrade.ObservedSkyModel</code></a></li><li><a href="#Comrade.PosteriorSamples"><code>Comrade.PosteriorSamples</code></a></li><li><a href="#Comrade.SEFDReference"><code>Comrade.SEFDReference</code></a></li><li><a href="#Comrade.Scan"><code>Comrade.Scan</code></a></li><li><a href="#Comrade.ScanSeg"><code>Comrade.ScanSeg</code></a></li><li><a href="#Comrade.Segmentation"><code>Comrade.Segmentation</code></a></li><li><a href="#Comrade.SingleReference"><code>Comrade.SingleReference</code></a></li><li><a href="#Comrade.SingleStokesGain"><code>Comrade.SingleStokesGain</code></a></li><li><a href="#Comrade.SiteArray"><code>Comrade.SiteArray</code></a></li><li><a href="#Comrade.SiteLookup"><code>Comrade.SiteLookup</code></a></li><li><a href="#Comrade.SkyModel"><code>Comrade.SkyModel</code></a></li><li><a href="#Comrade.TimeTable"><code>Comrade.TimeTable</code></a></li><li><a href="#Comrade.TrackSeg"><code>Comrade.TrackSeg</code></a></li><li><a href="#Comrade.TransformedVLBIPosterior"><code>Comrade.TransformedVLBIPosterior</code></a></li><li><a href="#Comrade.UnitFluxMap"><code>Comrade.UnitFluxMap</code></a></li><li><a href="#Comrade.VLBIPosterior"><code>Comrade.VLBIPosterior</code></a></li><li><a href="#Comrade.Visibilities"><code>Comrade.Visibilities</code></a></li><li><a href="#Comrade.VisibilityAmplitudes"><code>Comrade.VisibilityAmplitudes</code></a></li><li><a href="#Base.filter-Tuple{Any, EHTObservationTable}"><code>Base.filter</code></a></li><li><a href="#Comrade.add_fractional_noise"><code>Comrade.add_fractional_noise</code></a></li><li><a href="#Comrade.apply_fluctuations"><code>Comrade.apply_fluctuations</code></a></li><li><a href="#Comrade.apply_fluctuations!"><code>Comrade.apply_fluctuations!</code></a></li><li><a href="#Comrade.arrayconfig-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.arrayconfig</code></a></li><li><a href="#Comrade.axisfields"><code>Comrade.axisfields</code></a></li><li><a href="#Comrade.baseline"><code>Comrade.baseline</code></a></li><li><a href="#Comrade.baselineplot"><code>Comrade.baselineplot</code></a></li><li><a href="#Comrade.beamsize-Tuple{Comrade.AbstractArrayConfiguration}"><code>Comrade.beamsize</code></a></li><li><a href="#Comrade.beamsize-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.beamsize</code></a></li><li><a href="#Comrade.beamsize"><code>Comrade.beamsize</code></a></li><li><a href="#Comrade.build_datum"><code>Comrade.build_datum</code></a></li><li><a href="#Comrade.caltable-Tuple{SiteArray}"><code>Comrade.caltable</code></a></li><li><a href="#Comrade.chi2"><code>Comrade.chi2</code></a></li><li><a href="#Comrade.closure_phases"><code>Comrade.closure_phases</code></a></li><li><a href="#Comrade.comrade_opt"><code>Comrade.comrade_opt</code></a></li><li><a href="#Comrade.corr_image_prior"><code>Comrade.corr_image_prior</code></a></li><li><a href="#Comrade.dataproducts"><code>Comrade.dataproducts</code></a></li><li><a href="#Comrade.datatable"><code>Comrade.datatable</code></a></li><li><a href="#Comrade.dirty_beam"><code>Comrade.dirty_beam</code></a></li><li><a href="#Comrade.dirty_image"><code>Comrade.dirty_image</code></a></li><li><a href="#Comrade.domain-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.domain</code></a></li><li><a href="#Comrade.domain-Tuple{Comrade.AbstractArrayConfiguration}"><code>Comrade.domain</code></a></li><li><a href="#Comrade.extract_amp"><code>Comrade.extract_amp</code></a></li><li><a href="#Comrade.extract_coherency"><code>Comrade.extract_coherency</code></a></li><li><a href="#Comrade.extract_cphase"><code>Comrade.extract_cphase</code></a></li><li><a href="#Comrade.extract_lcamp"><code>Comrade.extract_lcamp</code></a></li><li><a href="#Comrade.extract_table"><code>Comrade.extract_table</code></a></li><li><a href="#Comrade.extract_vis"><code>Comrade.extract_vis</code></a></li><li><a href="#Comrade.flag"><code>Comrade.flag</code></a></li><li><a href="#Comrade.forward_jones"><code>Comrade.forward_jones</code></a></li><li><a href="#Comrade.forward_model"><code>Comrade.forward_model</code></a></li><li><a href="#Comrade.idealvisibilities"><code>Comrade.idealvisibilities</code></a></li><li><a href="#Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior}"><code>Comrade.instrumentmodel</code></a></li><li><a href="#Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior, Any}"><code>Comrade.instrumentmodel</code></a></li><li><a href="#Comrade.likelihood"><code>Comrade.likelihood</code></a></li><li><a href="#Comrade.load_samples"><code>Comrade.load_samples</code></a></li><li><a href="#Comrade.logclosure_amplitudes"><code>Comrade.logclosure_amplitudes</code></a></li><li><a href="#Comrade.loglikelihood"><code>Comrade.loglikelihood</code></a></li><li><a href="#Comrade.logprior"><code>Comrade.logprior</code></a></li><li><a href="#Comrade.plotcaltable"><code>Comrade.plotcaltable</code></a></li><li><a href="#Comrade.plotfields"><code>Comrade.plotfields</code></a></li><li><a href="#Comrade.postsamples"><code>Comrade.postsamples</code></a></li><li><a href="#Comrade.prior_sample"><code>Comrade.prior_sample</code></a></li><li><a href="#Comrade.quadrangle"><code>Comrade.quadrangle</code></a></li><li><a href="#Comrade.resample_equal"><code>Comrade.resample_equal</code></a></li><li><a href="#Comrade.residual"><code>Comrade.residual</code></a></li><li><a href="#Comrade.residual_data"><code>Comrade.residual_data</code></a></li><li><a href="#Comrade.residuals"><code>Comrade.residuals</code></a></li><li><a href="#Comrade.rmap"><code>Comrade.rmap</code></a></li><li><a href="#Comrade.samplerinfo"><code>Comrade.samplerinfo</code></a></li><li><a href="#Comrade.samplerstats"><code>Comrade.samplerstats</code></a></li><li><a href="#Comrade.select_baseline"><code>Comrade.select_baseline</code></a></li><li><a href="#Comrade.simulate_observation"><code>Comrade.simulate_observation</code></a></li><li><a href="#Comrade.site_tuple"><code>Comrade.site_tuple</code></a></li><li><a href="#Comrade.sites-Tuple{Comrade.AbstractObservationTable}"><code>Comrade.sites</code></a></li><li><a href="#Comrade.sites-Tuple{Comrade.AbstractArrayConfiguration}"><code>Comrade.sites</code></a></li><li><a href="#Comrade.sites-Tuple{Comrade.CalTable}"><code>Comrade.sites</code></a></li><li><a href="#Comrade.skymodel-Tuple{Comrade.AbstractVLBIPosterior, Any}"><code>Comrade.skymodel</code></a></li><li><a href="#Comrade.skymodel"><code>Comrade.skymodel</code></a></li><li><a href="#Comrade.timestamps"><code>Comrade.timestamps</code></a></li><li><a href="#Comrade.timetable"><code>Comrade.timetable</code></a></li><li><a href="#Comrade.triangle"><code>Comrade.triangle</code></a></li><li><a href="#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>HypercubeTransform.ascube</code></a></li><li><a href="#HypercubeTransform.asflat-Tuple{VLBIPosterior}"><code>HypercubeTransform.asflat</code></a></li><li><a href="#TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>TransformVariables.inverse</code></a></li><li><a href="#TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>TransformVariables.transform</code></a></li></ul>',3)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Comrade.Comrade",href:"#Comrade.Comrade"},[i("span",{class:"jlbinding"},"Comrade.Comrade")],-1)),s[1]||(s[1]=t()),e(a,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),s[3]||(s[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Comrade</span></span></code></pre></div><p>Composable Modeling of Radio Emission</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/Comrade.jl#L1-L4",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[2]})]),s[491]||(s[491]=l('<h2 id="Model-Definitions" tabindex="-1">Model Definitions <a class="header-anchor" href="#Model-Definitions" aria-label="Permalink to &quot;Model Definitions {#Model-Definitions}&quot;">​</a></h2><h3 id="Models" tabindex="-1">Models <a class="header-anchor" href="#Models" aria-label="Permalink to &quot;Models {#Models}&quot;">​</a></h3><p>For the description of the model API see <a href="https://ehtjulia.github.io/VLBISkyModels.jl/stable/" target="_blank" rel="noreferrer">VLBISkyModels</a>.</p><h2 id="Data-Interface" tabindex="-1">Data Interface <a class="header-anchor" href="#Data-Interface" aria-label="Permalink to &quot;Data Interface {#Data-Interface}&quot;">​</a></h2><h3 id="Data-Tables" tabindex="-1">Data Tables <a class="header-anchor" href="#Data-Tables" aria-label="Permalink to &quot;Data Tables {#Data-Tables}&quot;">​</a></h3>',5)),i("details",g,[i("summary",null,[s[4]||(s[4]=i("a",{id:"Comrade.AbstractVLBITable",href:"#Comrade.AbstractVLBITable"},[i("span",{class:"jlbinding"},"Comrade.AbstractVLBITable")],-1)),s[5]||(s[5]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[7]||(s[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractVLBITable{F}</span></span></code></pre></div><p>An abstract VLBI table that is used to store data for a VLBI observation. To implement your own table you just need to specify the <code>VLBISkyModels.rebuild</code> function.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/abstract.jl#L3-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[6]})]),i("details",c,[i("summary",null,[s[8]||(s[8]=i("a",{id:"Comrade.datatable",href:"#Comrade.datatable"},[i("span",{class:"jlbinding"},"Comrade.datatable")],-1)),s[9]||(s[9]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[12]||(s[12]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBITable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a table from the observation <code>obs</code>. The table is usually a StructArray of fields</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/abstract.jl#L11-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[10]}),s[13]||(s[13]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">datatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a tabular representation of the data. Note that for closures this ignores the covariance between quantities, which is otherwise included in the full <code>EHTObservationTable</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[11]||(s[11]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L61-L66",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[11]})]),i("details",b,[i("summary",null,[s[14]||(s[14]=i("a",{id:"Comrade.AbstractArrayConfiguration",href:"#Comrade.AbstractArrayConfiguration"},[i("span",{class:"jlbinding"},"Comrade.AbstractArrayConfiguration")],-1)),s[15]||(s[15]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[17]||(s[17]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractArrayConfiguration{F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVLBITable{F&lt;:Comrade.AbstractBaselineDatum}</span></span></code></pre></div><p>This defined the abstract type for an array configuration. Namely, baseline times, SEFD&#39;s, bandwidth, observation frequencies, etc.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[16]||(s[16]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L1-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[16]})]),i("details",u,[i("summary",null,[s[18]||(s[18]=i("a",{id:"Comrade.EHTArrayBaselineDatum",href:"#Comrade.EHTArrayBaselineDatum"},[i("span",{class:"jlbinding"},"Comrade.EHTArrayBaselineDatum")],-1)),s[19]||(s[19]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[21]||(s[21]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTArrayBaselineDatum{T, P, V} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractBaselineDatum</span></span></code></pre></div><p>A single datum of an <code>ArrayConfiguration</code></p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[20]||(s[20]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L48-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[20]})]),i("details",y,[i("summary",null,[s[22]||(s[22]=i("a",{id:"Comrade.EHTArrayConfiguration",href:"#Comrade.EHTArrayConfiguration"},[i("span",{class:"jlbinding"},"Comrade.EHTArrayConfiguration")],-1)),s[23]||(s[23]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[25]||(s[25]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTArrayConfiguration{A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.EHTArrayBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, F, T, S, D</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(AbstractArray{A&lt;:Comrade.EHTArrayBaselineDatum})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractArrayConfiguration{A&lt;:Comrade.EHTArrayBaselineDatum}</span></span></code></pre></div><p>Table that specified pertinent details about the EHT array during an observation. These are typically items that are known before the observation is made.</p><p><strong>Fields</strong></p><ul><li><p><code>bandwidth</code>: Observing bandwith (Hz)</p></li><li><p><code>tarr</code>: Telescope array file</p></li><li><p><code>scans</code>: Scan times</p></li><li><p><code>mjd</code>: modified julia date of the observation</p></li><li><p><code>ra</code>: RA of the observation in J2000 (deg)</p></li><li><p><code>dec</code>: DEC of the observation in J2000 (deg)</p></li><li><p><code>source</code>: Common source name</p></li><li><p><code>timetype</code>: Time zone used.</p></li><li><p><code>datatable</code>: A struct array of <code>EHTArrayBaselineDatum</code></p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[24]||(s[24]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L106-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[24]})]),i("details",m,[i("summary",null,[s[26]||(s[26]=i("a",{id:"Comrade.ClosureConfig",href:"#Comrade.ClosureConfig"},[i("span",{class:"jlbinding"},"Comrade.ClosureConfig")],-1)),s[27]||(s[27]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[29]||(s[29]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ClosureConfig{F, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractArrayConfiguration{F}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, D, V, E} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractArrayConfiguration{F}</span></span></code></pre></div><p>Array config file for closure quantities. This stores the design matrix <code>designmat</code> that transforms from visibilties to closure products.</p><p><strong>Fields</strong></p><ul><li><p><code>ac</code>: Array configuration for visibilities</p></li><li><p><code>designmat</code>: Closure design matrix</p></li><li><p><code>vis</code>: visibilities to closure design matrix</p></li><li><p><code>noise</code>: visibility noises to closure design matrix</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[28]||(s[28]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L197-L204",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[28]})]),i("details",E,[i("summary",null,[s[30]||(s[30]=i("a",{id:"Comrade.sites-Tuple{Comrade.AbstractArrayConfiguration}",href:"#Comrade.sites-Tuple{Comrade.AbstractArrayConfiguration}"},[i("span",{class:"jlbinding"},"Comrade.sites")],-1)),s[31]||(s[31]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[33]||(s[33]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get all the sites in a observation. The result is a vector of symbols.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[32]||(s[32]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L12-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[32]})]),i("details",C,[i("summary",null,[s[34]||(s[34]=i("a",{id:"Comrade.domain-Tuple{Comrade.AbstractArrayConfiguration}",href:"#Comrade.domain-Tuple{Comrade.AbstractArrayConfiguration}"},[i("span",{class:"jlbinding"},"Comrade.domain")],-1)),s[35]||(s[35]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[37]||(s[37]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ac; executor, header)</span></span></code></pre></div><p>Get the u, v, time, freq domain of the array.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[36]||(s[36]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L25-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[36]})]),i("details",f,[i("summary",null,[s[38]||(s[38]=i("a",{id:"Comrade.beamsize-Tuple{Comrade.AbstractArrayConfiguration}",href:"#Comrade.beamsize-Tuple{Comrade.AbstractArrayConfiguration}"},[i("span",{class:"jlbinding"},"Comrade.beamsize")],-1)),s[39]||(s[39]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ac</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the array <code>ac</code> as the inverse of the longest baseline distance.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[40]||(s[40]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L39-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[40]})]),i("details",F,[i("summary",null,[s[42]||(s[42]=i("a",{id:"Comrade.logclosure_amplitudes",href:"#Comrade.logclosure_amplitudes"},[i("span",{class:"jlbinding"},"Comrade.logclosure_amplitudes")],-1)),s[43]||(s[43]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[45]||(s[45]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logclosure_amplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DesignMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the log-closure amplitudes for a set of visibilities with a design matrix <code>d</code>.</p><p><strong>Notes</strong></p><p>This uses a closure design matrix for the computation.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[44]||(s[44]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L295-L302",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[44]})]),i("details",_,[i("summary",null,[s[46]||(s[46]=i("a",{id:"Comrade.closure_phases",href:"#Comrade.closure_phases"},[i("span",{class:"jlbinding"},"Comrade.closure_phases")],-1)),s[47]||(s[47]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[49]||(s[49]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closure_phases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DesignMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the closure phases for a set of visibilities and design matrix <code>d</code></p><p><strong>Notes</strong></p><p>This uses a closure design matrix for the computation.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[48]||(s[48]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L310-L317",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[48]})]),i("details",T,[i("summary",null,[s[50]||(s[50]=i("a",{id:"Comrade.AbstractObservationTable",href:"#Comrade.AbstractObservationTable"},[i("span",{class:"jlbinding"},"Comrade.AbstractObservationTable")],-1)),s[51]||(s[51]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[53]||(s[53]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractObservationTable{F</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractVisibilityDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVLBITable{F&lt;:Comrade.AbstractVisibilityDatum}</span></span></code></pre></div><p>The abstract obervation table. This contains actual data plus the array configuration.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[52]||(s[52]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L4-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[52]})]),i("details",A,[i("summary",null,[s[54]||(s[54]=i("a",{id:"Comrade.EHTObservationTable",href:"#Comrade.EHTObservationTable"},[i("span",{class:"jlbinding"},"Comrade.EHTObservationTable")],-1)),s[55]||(s[55]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[57]||(s[57]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTObservationTable{T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractVisibilityDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractObservationTable{T&lt;:Comrade.AbstractVisibilityDatum}</span></span></code></pre></div><p>The main data product type in <code>Comrade</code> this stores the <code>data</code> which can be a StructArray of any <code>AbstractInterferometryDatum</code> type. Note that the underlying structure is not part of the public API. Users should typically construct tables from the <a href="/Comrade.jl/stable/api#Comrade.extract_table"><code>extract_table</code></a> function.</p><p><strong>Fields</strong></p><ul><li><p><code>measurement</code>: Obervation measurement</p></li><li><p><code>noise</code>: Observation thermal noise</p></li><li><p><code>config</code>: Array config holds ancillary information about array</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[56]||(s[56]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L120-L130",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[56]})]),i("details",j,[i("summary",null,[s[58]||(s[58]=i("a",{id:"Comrade.domain-Tuple{Comrade.AbstractObservationTable}",href:"#Comrade.domain-Tuple{Comrade.AbstractObservationTable}"},[i("span",{class:"jlbinding"},"Comrade.domain")],-1)),s[59]||(s[59]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[61]||(s[61]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComradeBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Returns the u, v, time, frequency domain of the observation.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[60]||(s[60]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L52-L56",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[60]})]),i("details",v,[i("summary",null,[s[62]||(s[62]=i("a",{id:"Comrade.arrayconfig-Tuple{Comrade.AbstractObservationTable}",href:"#Comrade.arrayconfig-Tuple{Comrade.AbstractObservationTable}"},[i("span",{class:"jlbinding"},"Comrade.arrayconfig")],-1)),s[63]||(s[63]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[65]||(s[65]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrayconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">arrayconfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the array configuration for a given observation. If <code>p</code> is provided then only the property <code>p</code> is returned.</p>`,2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[64]||(s[64]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L71-L77",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[64]})]),i("details",D,[i("summary",null,[s[66]||(s[66]=i("a",{id:"Comrade.beamsize-Tuple{Comrade.AbstractObservationTable}",href:"#Comrade.beamsize-Tuple{Comrade.AbstractObservationTable}"},[i("span",{class:"jlbinding"},"Comrade.beamsize")],-1)),s[67]||(s[67]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[69]||(s[69]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the observation <code>obs</code> as the inverse of the longest baseline distance.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[68]||(s[68]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L102-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[68]})]),i("details",x,[i("summary",null,[s[70]||(s[70]=i("a",{id:"Comrade.sites-Tuple{Comrade.AbstractObservationTable}",href:"#Comrade.sites-Tuple{Comrade.AbstractObservationTable}"},[i("span",{class:"jlbinding"},"Comrade.sites")],-1)),s[71]||(s[71]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[73]||(s[73]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get all the sites in a observation. The result is a vector of symbols.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[72]||(s[72]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L110-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[72]})]),i("details",S,[i("summary",null,[s[74]||(s[74]=i("a",{id:"Comrade.TimeTable",href:"#Comrade.TimeTable"},[i("span",{class:"jlbinding"},"Comrade.TimeTable")],-1)),s[75]||(s[75]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[77]||(s[77]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TimeTable{O</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractVLBITable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T, S}</span></span></code></pre></div><p>Wraps EHTObservationTable in a table that separates the observation into scans. This implements the table interface. You can access scans by directly indexing into the table. This will create a view into the table not copying the data.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timetable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">begin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># grab first scan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># grab last scan</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[76]||(s[76]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/timetable.jl#L3-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[76]})]),i("details",B,[i("summary",null,[s[78]||(s[78]=i("a",{id:"Comrade.Scan",href:"#Comrade.Scan"},[i("span",{class:"jlbinding"},"Comrade.Scan")],-1)),s[79]||(s[79]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[81]||(s[81]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Scan{T, I, S}</span></span></code></pre></div><p>Composite type that holds information for a single scan of the telescope.</p><p><strong>Fields</strong></p><ul><li><p><code>time</code>: Scan time</p></li><li><p><code>index</code>: Scan indices which are (scan index, data start index, data end index)</p></li><li><p><code>scan</code>: Scan data usually a StructArray of a &lt;:AbstractVisibilityDatum</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[80]||(s[80]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/timetable.jl#L48-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[80]})]),i("details",I,[i("summary",null,[s[82]||(s[82]=i("a",{id:"Comrade.timetable",href:"#Comrade.timetable"},[i("span",{class:"jlbinding"},"Comrade.timetable")],-1)),s[83]||(s[83]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[85]||(s[85]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timetable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reorganizes the observation into a table of scans, where scan are defined by unique timestamps. To access the data you can use scalar indexing</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> timetable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Grab the first scan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scan1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Acess the detections in the scan</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scan1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># grab e.g. the baselines</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scan1[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[84]||(s[84]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/timetable.jl#L119-L138",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[84]})]),i("details",P,[i("summary",null,[s[86]||(s[86]=i("a",{id:"Comrade.flag",href:"#Comrade.flag"},[i("span",{class:"jlbinding"},"Comrade.flag")],-1)),s[87]||(s[87]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[89]||(s[89]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(condition, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Flags the data in <code>vis</code> that satisfy the condition <code>condition</code>. For the opposite effect call <code>filter(condition, data)</code></p><p><code>condition</code> is a function that accepts a tuple (baseline, measurement, noise) and returns a boolean. <code>baseline</code> are the fields that define the measurement like in <code>datatable(vis).baseline</code>.</p><p><strong>Example</strong></p><p>To flag all data with a uvdistance less than 0.1e9 use:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uvdist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1e9</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flag_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis, cond)</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[88]||(s[88]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/operations.jl#L66-L81",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[88]})]),i("details",V,[i("summary",null,[s[90]||(s[90]=i("a",{id:"Base.filter-Tuple{Any, EHTObservationTable}",href:"#Base.filter-Tuple{Any, EHTObservationTable}"},[i("span",{class:"jlbinding"},"Base.filter")],-1)),s[91]||(s[91]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[93]||(s[93]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(condition, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Filters all the data in <code>data</code> that satisfy the condition <code>condition</code>, i.e. if condition returns true for a given datum, it is kept in the returned object.</p><p>This is the converse of <code>flag</code>.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[92]||(s[92]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/operations.jl#L87-L94",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[92]})]),i("details",L,[i("summary",null,[s[94]||(s[94]=i("a",{id:"Comrade.select_baseline",href:"#Comrade.select_baseline"},[i("span",{class:"jlbinding"},"Comrade.select_baseline")],-1)),s[95]||(s[95]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[97]||(s[97]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">select_baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, bl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple{Symbol, Symbol}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Selects the baseline <code>bl</code> from the <code>data</code> object. The baseline is a tuple of symbols, but the order of the symbols does not matter.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[96]||(s[96]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/operations.jl#L100-L105",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[96]})]),i("details",w,[i("summary",null,[s[98]||(s[98]=i("a",{id:"Comrade.add_fractional_noise",href:"#Comrade.add_fractional_noise"},[i("span",{class:"jlbinding"},"Comrade.add_fractional_noise")],-1)),s[99]||(s[99]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[101]||(s[101]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_fractional_noise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dvis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ferr)</span></span></code></pre></div><p>Adds fractional noise to the data in <code>dvis</code> with the fractional error <code>ferr</code>, i.e. the returned data is identical except the noise is replaced with</p><p>√(σ² + ferr² * |V|²)</p><p>where <code>σ</code> is dvis[:noise] and <code>V</code> is dvis[:measurement].</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>When the datum type &lt;: ClosureProducts, we do not update the noise covariance matrix. This means that cross-correlation may be slightly incorrect.</p></div>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[100]||(s[100]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/operations.jl#L47-L60",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[100]})]),s[492]||(s[492]=i("h3",{id:"Datums",tabindex:"-1"},[t("Datums "),i("a",{class:"header-anchor",href:"#Datums","aria-label":'Permalink to "Datums {#Datums}"'},"​")],-1)),i("details",M,[i("summary",null,[s[102]||(s[102]=i("a",{id:"Comrade.AbstractVisibilityDatum",href:"#Comrade.AbstractVisibilityDatum"},[i("span",{class:"jlbinding"},"Comrade.AbstractVisibilityDatum")],-1)),s[103]||(s[103]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[105]||(s[105]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractVisibilityDatum</span></span></code></pre></div><p>An abstract type for all VLBI data types. See <a href="/Comrade.jl/stable/api#Comrade.EHTVisibilityDatum"><code>Comrade.EHTVisibilityDatum</code></a> for an example.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[104]||(s[104]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L3-L6",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[104]})]),i("details",R,[i("summary",null,[s[106]||(s[106]=i("a",{id:"Comrade.EHTCoherencyDatum",href:"#Comrade.EHTCoherencyDatum"},[i("span",{class:"jlbinding"},"Comrade.EHTCoherencyDatum")],-1)),s[107]||(s[107]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[109]||(s[109]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTCoherencyDatum{S, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, M</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(StaticArraysCore.SArray{Tuple{2, 2}, Complex{S}, 2})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(StaticArraysCore.SArray{Tuple{2, 2}, S, 2})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVisibilityDatum{S}</span></span></code></pre></div><p>A Datum for a single coherency matrix</p><p><strong>Fields</strong></p><ul><li><p><code>measurement</code>: coherency matrix, with entries in Jy</p></li><li><p><code>noise</code>: visibility uncertainty matrix, with entries in Jy</p></li><li><p><code>baseline</code>: baseline information</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[108]||(s[108]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L33-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[108]})]),i("details",O,[i("summary",null,[s[110]||(s[110]=i("a",{id:"Comrade.EHTVisibilityDatum",href:"#Comrade.EHTVisibilityDatum"},[i("span",{class:"jlbinding"},"Comrade.EHTVisibilityDatum")],-1)),s[111]||(s[111]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[113]||(s[113]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTVisibilityDatum{Pol, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractSinglePolDatum{Pol, S&lt;:Number}</span></span></code></pre></div><p>A struct holding the information for a single measured complex visibility.</p><p><strong>FIELDS</strong></p><ul><li><p><code>measurement</code>: Complex Vis. measurement (Jy)</p></li><li><p><code>noise</code>: noise of the complex vis (Jy)</p></li><li><p><code>baseline</code>: baseline information</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[112]||(s[112]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L78-L86",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[112]})]),i("details",N,[i("summary",null,[s[114]||(s[114]=i("a",{id:"Comrade.EHTVisibilityAmplitudeDatum",href:"#Comrade.EHTVisibilityAmplitudeDatum"},[i("span",{class:"jlbinding"},"Comrade.EHTVisibilityAmplitudeDatum")],-1)),s[115]||(s[115]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[117]||(s[117]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTVisibilityAmplitudeDatum{P, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractSinglePolDatum{P, S&lt;:Number}</span></span></code></pre></div><p>A struct holding the information for a single measured visibility amplitude.</p><p><strong>FIELDS</strong></p><ul><li><p><code>measurement</code>: amplitude (Jy)</p></li><li><p><code>noise</code>: noise of the visibility amplitude (Jy)</p></li><li><p><code>baseline</code>: baseline information</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[116]||(s[116]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L111-L119",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[116]})]),i("details",H,[i("summary",null,[s[118]||(s[118]=i("a",{id:"Comrade.EHTLogClosureAmplitudeDatum",href:"#Comrade.EHTLogClosureAmplitudeDatum"},[i("span",{class:"jlbinding"},"Comrade.EHTLogClosureAmplitudeDatum")],-1)),s[119]||(s[119]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[121]||(s[121]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTLogClosureAmplitudeDatum{P, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.ClosureProducts{P, S&lt;:Number}</span></span></code></pre></div><p>A Datum for a single log closure amplitude.</p><hr><ul><li><p><code>measurement</code>: log-closure amplitude</p></li><li><p><code>noise</code>: log-closure amplitude noise in the high-snr limit</p></li><li><p><code>baseline</code>: baselines for the closure phase</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[120]||(s[120]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L171-L178",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[120]})]),i("details",J,[i("summary",null,[s[122]||(s[122]=i("a",{id:"Comrade.EHTClosurePhaseDatum",href:"#Comrade.EHTClosurePhaseDatum"},[i("span",{class:"jlbinding"},"Comrade.EHTClosurePhaseDatum")],-1)),s[123]||(s[123]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[125]||(s[125]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EHTClosurePhaseDatum{P, S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, B</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Comrade.AbstractBaselineDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.ClosureProducts{P, S&lt;:Number}</span></span></code></pre></div><p>A Datum for a single closure phase.</p><p><strong>Fields</strong></p><ul><li><p><code>measurement</code>: closure phase (rad)</p></li><li><p><code>noise</code>: noise of the closure phase assuming the high-snr limit</p></li><li><p><code>baseline</code>: baselines for the closure phase</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[124]||(s[124]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L137-L145",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[124]})]),i("details",q,[i("summary",null,[s[126]||(s[126]=i("a",{id:"Comrade.triangle",href:"#Comrade.triangle"},[i("span",{class:"jlbinding"},"Comrade.triangle")],-1)),s[127]||(s[127]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[129]||(s[129]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">triangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTClosurePhaseDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sites used in the closure phase triangle.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[128]||(s[128]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L163-L167",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[128]})]),i("details",G,[i("summary",null,[s[130]||(s[130]=i("a",{id:"Comrade.baseline",href:"#Comrade.baseline"},[i("span",{class:"jlbinding"},"Comrade.baseline")],-1)),s[131]||(s[131]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[133]||(s[133]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scan</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the baselines for each datum in a scan</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[132]||(s[132]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/timetable.jl#L73-L77",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[132]})]),i("details",z,[i("summary",null,[s[134]||(s[134]=i("a",{id:"Comrade.quadrangle",href:"#Comrade.quadrangle"},[i("span",{class:"jlbinding"},"Comrade.quadrangle")],-1)),s[135]||(s[135]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[137]||(s[137]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">quadrangle</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTClosurePhaseDatum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sites used in the closure amplitude quadrangle.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[136]||(s[136]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/datums.jl#L195-L199",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[136]})]),s[493]||(s[493]=i("h3",{id:"Data-Products",tabindex:"-1"},[t("Data Products "),i("a",{class:"header-anchor",href:"#Data-Products","aria-label":'Permalink to "Data Products {#Data-Products}"'},"​")],-1)),i("details",U,[i("summary",null,[s[138]||(s[138]=i("a",{id:"Comrade.extract_table",href:"#Comrade.extract_table"},[i("span",{class:"jlbinding"},"Comrade.extract_table")],-1)),s[139]||(s[139]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[141]||(s[141]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, dataproducts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIDataProducts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extract an <a href="/Comrade.jl/stable/api#Comrade.EHTObservationTable"><code>Comrade.EHTObservationTable</code></a> table of data products <code>dataproducts</code>. To pass additional keyword for the data products you can pass them as keyword arguments to the data product type. For a list of potential data products see <code>subtypes(Comrade.VLBIDataProducts)</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dlcamp, dcphase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogClosureAmplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;snrcut</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosurePhases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;snrcut</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cut_trivial</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dcoh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Coherencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dvis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VisibilityAmplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[140]||(s[140]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L105-L118",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[140]})]),i("details",K,[i("summary",null,[s[142]||(s[142]=i("a",{id:"Comrade.Visibilities",href:"#Comrade.Visibilities"},[i("span",{class:"jlbinding"},"Comrade.Visibilities")],-1)),s[143]||(s[143]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[145]||(s[145]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Visibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the complex visibilities table in the <a href="/Comrade.jl/stable/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>Any keyword arguments are ignored for now. Use eht-imaging directly to modify the data.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[144]||(s[144]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L73-L81",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[144]})]),i("details",W,[i("summary",null,[s[146]||(s[146]=i("a",{id:"Comrade.VisibilityAmplitudes",href:"#Comrade.VisibilityAmplitudes"},[i("span",{class:"jlbinding"},"Comrade.VisibilityAmplitudes")],-1)),s[147]||(s[147]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[149]||(s[149]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Visibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the log closure amplitudes table in the <a href="/Comrade.jl/stable/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>For a list of potential keyword arguments see <code>eht-imaging</code> and <code>add_amp</code> command for obsdata.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[148]||(s[148]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L60-L68",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[148]})]),i("details",$,[i("summary",null,[s[150]||(s[150]=i("a",{id:"Comrade.ClosurePhases",href:"#Comrade.ClosurePhases"},[i("span",{class:"jlbinding"},"Comrade.ClosurePhases")],-1)),s[151]||(s[151]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[153]||(s[153]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosuresPhases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the closure phase table in the <a href="/Comrade.jl/stable/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>For a list of potential keyword arguments see <code>eht-imaging</code> and <code>add_cphase</code> command for obsdata. In addition note we have changed the following:</p><ul><li>count: How the closures are formed, the available options are &quot;min-correct&quot;, &quot;min&quot;, &quot;max&quot;</li></ul><p><strong>Warning</strong></p><p>The <code>count</code> keyword argument is treated specially in <code>Comrade</code>. The default option is &quot;min-correct&quot; and should almost always be used. This option construct a minimal set of closure phases that is valid even when the array isn&#39;t fully connected. For testing and legacy reasons we <code>ehtim</code> other count options are also included. However, the current <code>ehtim</code> count=&quot;min&quot; option is broken and does construct proper minimal sets of closure quantities if the array isn&#39;t fully connected.</p>',7)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[152]||(s[152]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L9-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[152]})]),i("details",X,[i("summary",null,[s[154]||(s[154]=i("a",{id:"Comrade.LogClosureAmplitudes",href:"#Comrade.LogClosureAmplitudes"},[i("span",{class:"jlbinding"},"Comrade.LogClosureAmplitudes")],-1)),s[155]||(s[155]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[157]||(s[157]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogClosureAmplitudes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the log closure amplitudes table in the <a href="/Comrade.jl/stable/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>For a list of potential keyword arguments see <code>eht-imaging</code> and <code>add_cphase</code> command for obsdata. In addition note we have changed the following:</p><ul><li>count: How the closures are formed, the available options are &quot;min-correct&quot;, &quot;min&quot;, &quot;max&quot;</li></ul><p>Returns an EHTObservation with log-closure amp. datums</p><p><strong>Warning</strong></p><p>The <code>count</code> keyword argument is treated specially in <code>Comrade</code>. The default option is &quot;min-correct&quot; and should almost always be used. This option construct a minimal set of closure phases that is valid even when the array isn&#39;t fully connected. For testing and legacy reasons we <code>ehtim</code> other count options are also included. However, the current <code>ehtim</code> count=&quot;min&quot; option is broken and does construct proper minimal sets of closure quantities if the array isn&#39;t fully connected.</p>',8)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[156]||(s[156]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L34-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[156]})]),i("details",Y,[i("summary",null,[s[158]||(s[158]=i("a",{id:"Comrade.Coherencies",href:"#Comrade.Coherencies"},[i("span",{class:"jlbinding"},"Comrade.Coherencies")],-1)),s[159]||(s[159]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[161]||(s[161]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Coherencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type to specify to extract the coherency matrices table in the <a href="/Comrade.jl/stable/api#Comrade.extract_table"><code>extract_table</code></a> function. Optional keywords are passed through <code>extract_table</code> to specify additional option.</p><p><strong>Special keywords for eht-imaging with Pyehtim.jl</strong></p><p>Any keyword arguments are ignored for now. Use eht-imaging directly to modify the data.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[160]||(s[160]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L86-L94",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[160]})]),s[494]||(s[494]=i("h2",{id:"VLBI-Modeling",tabindex:"-1"},[t("VLBI Modeling "),i("a",{class:"header-anchor",href:"#VLBI-Modeling","aria-label":'Permalink to "VLBI Modeling {#VLBI-Modeling}"'},"​")],-1)),s[495]||(s[495]=i("h3",{id:"Sky-Models",tabindex:"-1"},[t("Sky Models "),i("a",{class:"header-anchor",href:"#Sky-Models","aria-label":'Permalink to "Sky Models {#Sky-Models}"'},"​")],-1)),i("details",Q,[i("summary",null,[s[162]||(s[162]=i("a",{id:"Comrade.AbstractSkyModel",href:"#Comrade.AbstractSkyModel"},[i("span",{class:"jlbinding"},"Comrade.AbstractSkyModel")],-1)),s[163]||(s[163]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[165]||(s[165]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractSkyModel</span></span></code></pre></div><p>The abstract type for Comrade Sky Models. For a concrete implementation see <a href="/Comrade.jl/stable/api#Comrade.SkyModel"><code>SkyModel</code></a>.</p><p>Any subtype must implement the following methods</p><ul><li><code>ObservedSkyModel(m::AbstractSkyModel, array::AbstractArrayConfiguration)</code>: Constructs an observed sky model given the sky model <code>m</code> and the array configuration <code>array</code>. This method is used to compute the visibilities and image of the sky model.</li></ul><p>The following methods have default implementations:</p><ul><li><p><code>idealvisibilities(m::AbstractSkyModel, x)</code>: Computes the ideal visibilities of the sky model <code>m</code> given the model parameters <code>x</code>.</p></li><li><p><code>skymodel(m::AbstractSkyModel, x)</code>: Returns the sky model image given the model parameters <code>x</code>.</p></li><li><p><code>domain(m::AbstractSkyModel)</code>: Returns the domain of the sky model <code>m</code>.</p></li><li><p><code>set_array(m::AbstractSkyModel, array::AbstractArrayConfiguration)</code>: Sets the array configuration for the sky model <code>m</code> and returns the observed sky model and prior.</p></li><li><p><code>set_prior(m::AbstractSkyModel, array::AbstractArrayConfiguration)</code>: Sets the prior for the sky model <code>m</code> given the array configuration <code>array</code>. This is used to set the priors for the model parameters.</p></li></ul>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[164]||(s[164]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/skymodels/abstract.jl#L1-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[164]})]),i("details",Z,[i("summary",null,[s[166]||(s[166]=i("a",{id:"Comrade.SkyModel",href:"#Comrade.SkyModel"},[i("span",{class:"jlbinding"},"Comrade.SkyModel")],-1)),s[167]||(s[167]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[169]||(s[169]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, prior, grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; algorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NFFTAlg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), metadata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a sky model using the function map <code>f</code> with parameter priors <code>prior</code>, where the image model is defined on the domain <code>grid</code>. If the underlying model produced by <code>f</code> is non-analytic, then <code>algorithm</code> is used to numerically Fourier transform the model image. The <code>metadata</code> option contains additional information needed by the model <code>f</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>f(x, p)</code> : A function must be two arguments, where <code>x</code> are the model parameters and <code>p</code> is the metadata. typically <code>x</code> and <code>p</code> are named tuples.</p></li><li><p><code>prior</code> : A named tuple of priors for the model parameters defined in <code>x</code>. Each model parameter used in <code>x</code> must have a defined element in the prior.</p></li><li><p><code>grid</code> : The domain on which the model is defined. This defines the field of view and resolution of the model. Note that if <code>f</code> produces a analytic model then this field of view isn&#39;t used directly in the computation of the visibilities.</p></li></ul><p><strong>Optional Arguments</strong></p><ul><li><p><code>algorithm</code> : The Fourier transform algorithm used to compute the visibilities. The default is <code>NFFTAlg()</code> which uses a non-uniform fast Fourier transform. Other options can be found by using <code>subtypes(VLBISkyModels.FourierTransform)</code></p></li><li><p><code>metadata</code> : Additional information needed by the model <code>f</code>. These are the addtional arguments passed to the model function <code>f</code>.</p></li></ul>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[168]||(s[168]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/skymodels/models.jl#L13-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[168]})]),i("details",ss,[i("summary",null,[s[170]||(s[170]=i("a",{id:"Comrade.FixedSkyModel",href:"#Comrade.FixedSkyModel"},[i("span",{class:"jlbinding"},"Comrade.FixedSkyModel")],-1)),s[171]||(s[171]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[173]||(s[173]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FixedSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; algorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> NFFTAlg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Construct a sky model that has no free parameters. This is useful for models where the image structure is known apriori but the instrument model is unknown.</p><p><strong>Arguments</strong></p><ul><li><p><code>m</code> : The fixed sky model.</p></li><li><p><code>grid</code> : The domain on which the model is defined. This defines the field of view and resolution of the model. Note that if <code>f</code> produces a analytic model then this field of view isn&#39;t used directly in the computation of the visibilities.</p></li></ul><p><strong>Optional Arguments</strong></p><ul><li><code>algorithm</code> : The Fourier transform algorithm used to compute the visibilities. The default is <code>NFFTAlg()</code> which uses a non-uniform fast Fourier transform. Other options can be found by using <code>subtypes(VLBISkyModels.FourierTransform)</code></li></ul>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[172]||(s[172]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/skymodels/fixed.jl#L1-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[172]})]),i("details",is,[i("summary",null,[s[174]||(s[174]=i("a",{id:"Comrade.MultiSkyModel",href:"#Comrade.MultiSkyModel"},[i("span",{class:"jlbinding"},"Comrade.MultiSkyModel")],-1)),s[175]||(s[175]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[177]||(s[177]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MultiSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(skymodels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a sky model that is a collection of multiple components. This is useful when you, e.g., want to decompose the sky into multiple grids, such as for wide-field imaging where the is a core component and a very far away component.</p><p><strong>Arguments</strong></p><ul><li><code>skymodels</code> : A named tuple of sky models, where each model is a <a href="/Comrade.jl/stable/api#Comrade.SkyModel"><code>SkyModel</code></a>.</li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MultiSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((core </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m1, far </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m2))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stot, x)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(core </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, far </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[176]||(s[176]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/skymodels/multi.jl#L3-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[176]})]),i("details",as,[i("summary",null,[s[178]||(s[178]=i("a",{id:"Comrade.idealvisibilities",href:"#Comrade.idealvisibilities"},[i("span",{class:"jlbinding"},"Comrade.idealvisibilities")],-1)),s[179]||(s[179]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[181]||(s[181]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">idealvisibilities</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Computes the ideal non-corrupted visibilities of the sky model <code>m</code> given the model parameters <code>x</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[180]||(s[180]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/skymodels/abstract.jl#L48-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[180]})]),i("details",es,[i("summary",null,[s[182]||(s[182]=i("a",{id:"Comrade.skymodel-Tuple{Comrade.AbstractVLBIPosterior, Any}",href:"#Comrade.skymodel-Tuple{Comrade.AbstractVLBIPosterior, Any}"},[i("span",{class:"jlbinding"},"Comrade.skymodel")],-1)),s[183]||(s[183]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[185]||(s[185]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Returns the sky model or image of a posterior using the parameter values<code>θ</code></p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[184]||(s[184]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L137-L141",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[184]})]),s[496]||(s[496]=i("h3",{id:"Instrument-Models",tabindex:"-1"},[t("Instrument Models "),i("a",{class:"header-anchor",href:"#Instrument-Models","aria-label":'Permalink to "Instrument Models {#Instrument-Models}"'},"​")],-1)),i("details",ts,[i("summary",null,[s[186]||(s[186]=i("a",{id:"Comrade.CalTable",href:"#Comrade.CalTable"},[i("span",{class:"jlbinding"},"Comrade.CalTable")],-1)),s[187]||(s[187]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[189]||(s[189]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CalTable{T, F, G</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(AbstractVecOrMat)</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>A Tabes of calibration quantities. The columns of the table are the telescope sites codes. The rows are the calibration quantities at a specific time and frequency. This user should not use this struct directly. Instead that should call <a href="/Comrade.jl/stable/api#Comrade.caltable-Tuple{SiteArray}"><code>caltable</code></a>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[188]||(s[188]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/caltable.jl#L3-L9",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[188]})]),i("details",ls,[i("summary",null,[s[190]||(s[190]=i("a",{id:"Comrade.caltable-Tuple{SiteArray}",href:"#Comrade.caltable-Tuple{SiteArray}"},[i("span",{class:"jlbinding"},"Comrade.caltable")],-1)),s[191]||(s[191]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[193]||(s[193]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">caltable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a calibration table from a site array</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[192]||(s[192]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/caltable.jl#L229-L233",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[192]})]),i("details",ns,[i("summary",null,[s[194]||(s[194]=i("a",{id:"Comrade.sites-Tuple{Comrade.CalTable}",href:"#Comrade.sites-Tuple{Comrade.CalTable}"},[i("span",{class:"jlbinding"},"Comrade.sites")],-1)),s[195]||(s[195]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[197]||(s[197]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CalTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the sites in the calibration table</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[196]||(s[196]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/caltable.jl#L23-L27",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[196]})]),i("details",rs,[i("summary",null,[s[198]||(s[198]=i("a",{id:"Comrade.IIDSitePrior",href:"#Comrade.IIDSitePrior"},[i("span",{class:"jlbinding"},"Comrade.IIDSitePrior")],-1)),s[199]||(s[199]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[201]||(s[201]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Segmentation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dist)</span></span></code></pre></div><p>Create a site prior that is independent and identically distributed (IID) across all times and frequencies. The <code>seg</code> argument is a segmentation object that defines how fine the time segmentation is. The <code>dist</code> argument is the distribution of the site prior.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>creates a site prior that is constant across scans and each scan has a unit Normal prior.</p>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[200]||(s[200]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/independent.jl#L7-L22",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[200]})]),i("details",os,[i("summary",null,[s[202]||(s[202]=i("a",{id:"Comrade.ArrayPrior",href:"#Comrade.ArrayPrior"},[i("span",{class:"jlbinding"},"Comrade.ArrayPrior")],-1)),s[203]||(s[203]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[205]||(s[205]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(default_dist; refant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), phase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a prior for an entire array of sites.</p><ul><li><p>The <code>default_dist</code> is the default distribution for all sites. Currently only <code>IIDSitePrior</code> is supported.</p></li><li><p>Different priors for specified sites can be set using kwargs.</p></li><li><p>The <code>refant</code> set the reference antennae to be used and is typically only done for priors that</p></li></ul><p>correspond to gain phases.</p><ul><li>The <code>phase</code> argument is a boolean that specifies if</li></ul><p>the prior is for a <code>phase</code> or not. <em>The phase argument is experimental and we recommend setting it to false currently.</em></p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) refant</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SEFDReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>means that every site has a normal prior with mean 0 and 0.1 std. dev. except LM which is mean zero and unit std. dev. Finally the refant is using the <a href="/Comrade.jl/stable/api#Comrade.SEFDReference"><code>SEFDReference</code></a> scheme.</p>',9)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[204]||(s[204]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/array_priors.jl#L10-L31",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[204]})]),i("details",ps,[i("summary",null,[s[206]||(s[206]=i("a",{id:"Comrade.Segmentation",href:"#Comrade.Segmentation"},[i("span",{class:"jlbinding"},"Comrade.Segmentation")],-1)),s[207]||(s[207]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[209]||(s[209]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Segmentation</span></span></code></pre></div><p>The data segmentation scheme to use. This is used specify how often we want various instrument hyperparameters to change. A user subtyping this expression must implement the following functions:</p><ul><li><a href="/Comrade.jl/stable/api#Comrade.timestamps"><code>timestamps</code></a>: Specifies the time region for each segmentation scheme given an array</li></ul>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[208]||(s[208]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/segmentation.jl#L3-L11",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[208]})]),i("details",ds,[i("summary",null,[s[210]||(s[210]=i("a",{id:"Comrade.IntegSeg",href:"#Comrade.IntegSeg"},[i("span",{class:"jlbinding"},"Comrade.IntegSeg")],-1)),s[211]||(s[211]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[213]||(s[213]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IntegSeg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.TimeSegmentation</span></span></code></pre></div><p>Data segmentation such that the quantity is constant over the time stamps in the data. If the data is scan-averaged before then <code>IntegSeg</code> will be identical to <code>ScanSeg</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[212]||(s[212]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/segmentation.jl#L36-L41",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[212]})]),i("details",hs,[i("summary",null,[s[214]||(s[214]=i("a",{id:"Comrade.ScanSeg",href:"#Comrade.ScanSeg"},[i("span",{class:"jlbinding"},"Comrade.ScanSeg")],-1)),s[215]||(s[215]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[217]||(s[217]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ScanSeg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.TimeSegmentation</span></span></code></pre></div><p>Data segmentation such that the quantity is constant over a <code>scan</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[216]||(s[216]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/segmentation.jl#L27-L31",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[216]})]),i("details",ks,[i("summary",null,[s[218]||(s[218]=i("a",{id:"Comrade.TrackSeg",href:"#Comrade.TrackSeg"},[i("span",{class:"jlbinding"},"Comrade.TrackSeg")],-1)),s[219]||(s[219]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[221]||(s[221]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TrackSeg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.TimeSegmentation</span></span></code></pre></div><p>Data segmentation such that the quantity is constant over a <code>track</code>, i.e., the observation &quot;night&quot;.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[220]||(s[220]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/segmentation.jl#L19-L23",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[220]})]),i("details",gs,[i("summary",null,[s[222]||(s[222]=i("a",{id:"Comrade.timestamps",href:"#Comrade.timestamps"},[i("span",{class:"jlbinding"},"Comrade.timestamps")],-1)),s[223]||(s[223]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[225]||(s[225]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">timestamps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(seg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TimeSegmentation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the time stamps or really a vector of integration time regions for a given segmentation scheme <code>seg</code> and array configuration <code>array</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[224]||(s[224]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/segmentation.jl#L44-L49",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[224]})]),i("details",cs,[i("summary",null,[s[226]||(s[226]=i("a",{id:"Comrade.SingleReference",href:"#Comrade.SingleReference"},[i("span",{class:"jlbinding"},"Comrade.SingleReference")],-1)),s[227]||(s[227]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[229]||(s[229]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SingleReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(site</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, val)</span></span></code></pre></div><p>Selects a single reference site for all scans. The value of the site is set to <code>val</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[228]||(s[228]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/refant.jl#L7-L11",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[228]})]),i("details",bs,[i("summary",null,[s[230]||(s[230]=i("a",{id:"Comrade.SEFDReference",href:"#Comrade.SEFDReference"},[i("span",{class:"jlbinding"},"Comrade.SEFDReference")],-1)),s[231]||(s[231]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[233]||(s[233]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SEFDReference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sefd_index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Selects the reference site based on the SEFD of each telescope, where the smallest SEFD is preferentially selected. The reference gain is set to <code>val</code> and the user can select to use the <code>n</code> lowest SEFD site by passing <code>sefd_index = n</code>.</p><p><strong>Notes</strong></p><p>This is done on a per-scan basis so if a site is missing from a scan the next highest SEFD site will be used.</p>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[232]||(s[232]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/priors/refant.jl#L23-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[232]})]),i("details",us,[i("summary",null,[s[234]||(s[234]=i("a",{id:"Comrade.SingleStokesGain",href:"#Comrade.SingleStokesGain"},[i("span",{class:"jlbinding"},"Comrade.SingleStokesGain")],-1)),s[235]||(s[235]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[237]||(s[237]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Construct a gain term that is applicable to a single measured visibility. This is useful for pure stokes I modeling. The <code>param_map</code> is a function that maps the set of parameters to the gain term.</p><p>The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a single number or complex gain.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gp))</span></span></code></pre></div>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[236]||(s[236]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L9-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[236]})]),i("details",ys,[i("summary",null,[s[238]||(s[238]=i("a",{id:"Comrade.JonesG",href:"#Comrade.JonesG"},[i("span",{class:"jlbinding"},"Comrade.JonesG")],-1)),s[239]||(s[239]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[241]||(s[241]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Describes a gain Jones matrix with layout</p><p>g1 0 0 g2</p><p>where <code>g1</code> and <code>g2</code> are the gains for first and second feed of the telescope.</p><p>The <code>param_map</code> is a function that maps the set of parameters to the gain term. The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a two element tuple where the first element is the complex gain <code>g1</code> and the second element is the complex gain <code>g2</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    g1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gp1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    g2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lgratio </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gpratio)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g1, g2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[240]||(s[240]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L31-L55",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[240]})]),i("details",ms,[i("summary",null,[s[242]||(s[242]=i("a",{id:"Comrade.JonesD",href:"#Comrade.JonesD"},[i("span",{class:"jlbinding"},"Comrade.JonesD")],-1)),s[243]||(s[243]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[245]||(s[245]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Describes a leakage Jones matrix with layout</p><p>1 d1 d2 1</p><p>where <code>d1</code> and <code>d2</code> are the d-terms for first and second feed of the telescope.</p><p>The <code>param_map</code> is a function that maps the set of parameters to the gain term. The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a two element tuple where the first element is the complex d-term <code>d1</code> and the second element is the complex d-term <code>d2</code>.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1real, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d1imag)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    d2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d2real, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d2imag)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d1, d2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[244]||(s[244]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L62-L86",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[244]})]),i("details",Es,[i("summary",null,[s[246]||(s[246]=i("a",{id:"Comrade.JonesR",href:"#Comrade.JonesR"},[i("span",{class:"jlbinding"},"Comrade.JonesR")],-1)),s[247]||(s[247]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[249]||(s[249]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;add_fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The <strong>response</strong> Jones matrix. This is the reponse the telescope has to the incoming electric field, if the telescope was ideal. If <code>add_fr=true</code> then feed rotation are included.</p><p>This Jones matrix has no parameters so it doesn&#39;t accept a <code>param_map</code>. The <code>add_fr</code> argument is a boolean that specifies if feed rotation should be included.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[248]||(s[248]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L138-L147",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[248]})]),i("details",Cs,[i("summary",null,[s[250]||(s[250]=i("a",{id:"Comrade.JonesF",href:"#Comrade.JonesF"},[i("span",{class:"jlbinding"},"Comrade.JonesF")],-1)),s[251]||(s[251]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[253]||(s[253]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;add_fr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The <strong>feed rotation</strong> Jones matrix. This matrix describes the orientation of the feeds of the telescope.</p><p>This Jones matrix has no parameters so it doesn&#39;t accept a <code>param_map</code>. The <code>add_fr</code> argument is a boolean that specifies if feed rotation should be included.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[252]||(s[252]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L117-L126",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[252]})]),i("details",fs,[i("summary",null,[s[254]||(s[254]=i("a",{id:"Comrade.GenericJones",href:"#Comrade.GenericJones"},[i("span",{class:"jlbinding"},"Comrade.GenericJones")],-1)),s[255]||(s[255]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[257]||(s[257]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GenericJones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_map)</span></span></code></pre></div><p>Construct a generic dense jones matrix with four parameterized elements.</p><p>The <code>param_map</code> is a function that maps the set of parameters to the gain term. The arguments of <code>param_map</code> is typically a named tuple, where some of the elements are the parameter values needed to compute the gain. The return value of the <code>param_map</code> should be a four element tuple where the elements are the entries of the jones matrix in column major order.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GenericJones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j11, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j21, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j12, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">j22</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[256]||(s[256]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L93-L111",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[256]})]),i("details",Fs,[i("summary",null,[s[258]||(s[258]=i("a",{id:"Comrade.JonesSandwich",href:"#Comrade.JonesSandwich"},[i("span",{class:"jlbinding"},"Comrade.JonesSandwich")],-1)),s[259]||(s[259]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[261]||(s[261]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([decomp_function</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,] matrices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJonesMatrix...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a Jones matrix that is the results combining multiple Jones matrices together. The specific composition is determined by the <code>decomp_function</code>. For example if the decomp function is <code>*</code> then the matrices are multiplied together, if it is <code>+</code> then they are added.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gR, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gL)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Gain matrix</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dR, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dL)) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># leakage matrix</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">F </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()                </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Feed rotation matrix</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, G, D, F) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construct the full Jones matrix as G*D*F</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or if you want to include FR calibration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, D, F) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g, d, f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> adjoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[260]||(s[260]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L175-L197",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[260]})]),i("details",_s,[i("summary",null,[s[262]||(s[262]=i("a",{id:"Comrade.AbstractInstrumentModel",href:"#Comrade.AbstractInstrumentModel"},[i("span",{class:"jlbinding"},"Comrade.AbstractInstrumentModel")],-1)),s[263]||(s[263]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[265]||(s[265]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractInstrumentModel</span></span></code></pre></div><p>The abstract instrument model. For a concrete implementation see <a href="/Comrade.jl/stable/api#Comrade.IdealInstrumentModel"><code>IdealInstrumentModel</code></a> and <a href="/Comrade.jl/stable/api#Comrade.InstrumentModel"><code>InstrumentModel</code></a>.</p><p>Any subtype must implement the following methods</p><ul><li><p><code>set_array(m::AbstractInstrumentModel, array::AbstractArrayConfiguration)</code>: Sets the array configuration for the instrument model <code>m</code> and returns the observed instrument model and prior.</p></li><li><p><code>apply_instrument(vis, m::AbstractInstrumentModel, x)</code>: Applies the instrument model <code>m</code> to the visibilities <code>vis</code> given the model parameters <code>x</code>.</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[264]||(s[264]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/model.jl#L3-L15",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[264]})]),i("details",Ts,[i("summary",null,[s[266]||(s[266]=i("a",{id:"Comrade.IdealInstrumentModel",href:"#Comrade.IdealInstrumentModel"},[i("span",{class:"jlbinding"},"Comrade.IdealInstrumentModel")],-1)),s[267]||(s[267]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[269]||(s[269]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IdealInstrument</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs an ideal instrument that has no corruptions or feed rotation.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[268]||(s[268]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/model.jl#L18-L22",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[268]})]),i("details",As,[i("summary",null,[s[270]||(s[270]=i("a",{id:"Comrade.InstrumentModel",href:"#Comrade.InstrumentModel"},[i("span",{class:"jlbinding"},"Comrade.InstrumentModel")],-1)),s[271]||(s[271]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[273]||(s[273]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jones, prior; refbasis </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CirBasis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Builds an instrument model using the jones matrix <code>jones</code>, with priors <code>prior</code>. The reference basis is <code>refbasis</code> and is used to define what the ideal basis is. Namely, the basis that you have the ideal visibilties to be represented in. For classical VLBI <code>refbasis = CirBasis</code> is a good default option, sinc the majority of the array uses circular feeds. For linear feed arrays like VGOS a user should switch to <code>LinBasis</code>, although failure to do so will not cause any errors, and is just a less efficient representation of the visibilities.</p><p><strong>Arguments</strong></p><ul><li><p><code>jones</code> : The jones matrix that represents the instrument. This is a function that takes in the parameters of the instrument and returns a jones matrix. See <a href="/Comrade.jl/stable/api#Comrade.SingleStokesGain"><code>SingleStokesGain</code></a> for a Stokes I example and <a href="/Comrade.jl/stable/api#Comrade.JonesG"><code>JonesG</code></a> or <a href="/Comrade.jl/stable/api#Comrade.JonesD"><code>JonesD</code></a> for polarized examples.</p></li><li><p><code>prior</code>: A named tuple of <a href="/Comrade.jl/stable/api#Comrade.ArrayPrior"><code>ArrayPrior</code></a> that specify what the priors are for each component used to construct the jones matrix using the function <code>jones</code></p></li></ul><p><strong>Optional Arguments</strong></p><ul><li><code>refbasis</code>: The reference basis used for the computation. The default is <code>CirBasis()</code> which are circular feeds.</li></ul><p><strong>Example</strong></p><p>A Stokes I example is</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pg))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            pg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, intprior)</span></span></code></pre></div><p>A standard polarized example is</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        gR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lgr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gpr)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        gL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lgrat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gprat)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gR, gL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> D </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dR </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dRre, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dRim)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dL </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> complex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dLre, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dLim)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gR, gL</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> J </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JonesSandwich</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, D, R)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lgr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    gpr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagonalVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    lgrat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    gprat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagonalVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dRre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dRim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dLre </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    dLim </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> intm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(J, intprior)</span></span></code></pre></div><p>which construct the gain matrix from R and ratios, and D is the small leakage matrix. <a href="/Comrade.jl/stable/api#Comrade.JonesR"><code>JonesR</code></a> is the <em>response matrix</em> that controls how the site responds to the ideal visibility in the reference basis.</p>`,12)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[272]||(s[272]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/model.jl#L81-L146",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[272]})]),i("details",js,[i("summary",null,[s[274]||(s[274]=i("a",{id:"Comrade.SiteArray",href:"#Comrade.SiteArray"},[i("span",{class:"jlbinding"},"Comrade.SiteArray")],-1)),s[275]||(s[275]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[277]||(s[277]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, times, frequencies, sites)</span></span></code></pre></div><p>A <code>SiteArray</code> is an array of data that has a specified ordering of <code>times</code>, <code>frequencies</code>, and <code>sites</code>. Each data point is assigned a unique <code>time</code>, <code>frequency</code>, and <code>site</code> code. This allows for easy selection of data points based on these criteria and forms the base array for instrument modeling.</p><p>To select a subset of the data based on a specifid site, time and frequency you can use</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sarr[S=:ALMA, Ti=1:10, Fr=1:10]</span></span></code></pre></div><p>which will grab the first 10 time and frequency points for the ALMA site.</p><p>Otherwise indexing into the array will return an element whose time, frequency, and site are the element of the <code>times</code>, <code>frequencies</code>, and <code>sites</code> arrays respectively.</p>',6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[276]||(s[276]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/site_array.jl#L3-L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[276]})]),i("details",vs,[i("summary",null,[s[278]||(s[278]=i("a",{id:"Comrade.SiteLookup",href:"#Comrade.SiteLookup"},[i("span",{class:"jlbinding"},"Comrade.SiteLookup")],-1)),s[279]||(s[279]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[281]||(s[281]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteLookup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SiteArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a site lookup dictionary for a site array.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[280]||(s[280]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/site_array.jl#L184-L188",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[280]})]),i("details",Ds,[i("summary",null,[s[282]||(s[282]=i("a",{id:"Comrade.forward_jones",href:"#Comrade.forward_jones"},[i("span",{class:"jlbinding"},"Comrade.forward_jones")],-1)),s[283]||(s[283]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[285]||(s[285]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forward_jones</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(J</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractJonesMatrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct the forward model for the jones matrix model <code>J</code> with the parameters <code>xs</code>.</p><p>The <code>xs</code> is a named tuple where the keys are the parameter names and the values are SiteArrays with the parameter values. The return value is a <code>SiteArray</code> whose dimension is the largest of the elements of `xs, and whose elements are the jones matrices for the specific parameters.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[284]||(s[284]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/jonesmatrices.jl#L215-L224",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[284]})]),s[497]||(s[497]=i("h3",{id:"Posterior-Constructions",tabindex:"-1"},[t("Posterior Constructions "),i("a",{class:"header-anchor",href:"#Posterior-Constructions","aria-label":'Permalink to "Posterior Constructions {#Posterior-Constructions}"'},"​")],-1)),i("details",xs,[i("summary",null,[s[286]||(s[286]=i("a",{id:"Comrade.AbstractVLBIPosterior",href:"#Comrade.AbstractVLBIPosterior"},[i("span",{class:"jlbinding"},"Comrade.AbstractVLBIPosterior")],-1)),s[287]||(s[287]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[289]||(s[289]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractVLBIPosterior</span></span></code></pre></div><p>An abstract VLBI posterior. See <a href="/Comrade.jl/stable/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a> for a concrete implementation. This implements the <code>DensityInterface</code> and <code>LogDensityProblem</code> interfaces.</p><p>Default methods include:</p><ul><li><p><code>logprior(d::AbstractVLBIPosterior, θ)</code>: Computes the log-prior of the posterior.</p></li><li><p><code>loglikelihood(d::AbstractVLBIPosterior, θ)</code>: Computes the log-likelihood of the posterior.</p></li><li><p><code>dimension(d::AbstractVLBIPosterior)</code>: Returns the dimension of the posterior.</p></li><li><p><code>skymodel(d::AbstractVLBIPosterior, θ)</code>: Returns the sky model of the posterior.</p></li><li><p><code>prior_sample(rng::AbstractRandom, d::AbstractVLBIPosterior, dims...)</code>: Samples from the prior of the posterior.</p></li><li><p><code>forward_model(d::AbstractVLBIPosterior, θ)</code>: Computes the forward model visibilities of the posterior.</p></li><li><p><code>dataproducts(d::AbstractVLBIPosterior)</code>: Returns the data products you are fitting as a tuple.</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[288]||(s[288]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L9-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[288]})]),i("details",Ss,[i("summary",null,[s[290]||(s[290]=i("a",{id:"Comrade.logprior",href:"#Comrade.logprior"},[i("span",{class:"jlbinding"},"Comrade.logprior")],-1)),s[291]||(s[291]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[293]||(s[293]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logprior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Computes the log-prior of the posterior <code>d</code> with parameters <code>θ</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[292]||(s[292]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L29-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[292]})]),i("details",Bs,[i("summary",null,[s[294]||(s[294]=i("a",{id:"Comrade.loglikelihood",href:"#Comrade.loglikelihood"},[i("span",{class:"jlbinding"},"Comrade.loglikelihood")],-1)),s[295]||(s[295]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[297]||(s[297]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">loglikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Computes the log-likelihood of the posterior <code>d</code> with parameters <code>θ</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[296]||(s[296]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L126-L130",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[296]})]),i("details",Is,[i("summary",null,[s[298]||(s[298]=i("a",{id:"Comrade.dataproducts",href:"#Comrade.dataproducts"},[i("span",{class:"jlbinding"},"Comrade.dataproducts")],-1)),s[299]||(s[299]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[301]||(s[301]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dataproducts</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the data products you are fitting as a tuple. The order of the tuple corresponds to the order of the <code>dataproducts</code> argument in <a href="/Comrade.jl/stable/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[300]||(s[300]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L158-L163",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[300]})]),i("details",Ps,[i("summary",null,[s[302]||(s[302]=i("a",{id:"Comrade.skymodel",href:"#Comrade.skymodel"},[i("span",{class:"jlbinding"},"Comrade.skymodel")],-1)),s[303]||(s[303]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[306]||(s[306]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the sky model of the posterior <code>d</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[304]||(s[304]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L41-L45",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[304]}),s[307]||(s[307]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skymodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Returns the sky model or image of a posterior using the parameter values<code>θ</code></p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[305]||(s[305]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L137-L141",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[305]})]),i("details",Vs,[i("summary",null,[s[308]||(s[308]=i("a",{id:"Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior}",href:"#Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior}"},[i("span",{class:"jlbinding"},"Comrade.instrumentmodel")],-1)),s[309]||(s[309]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[311]||(s[311]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">instrumentmodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the instrument model of the posterior <code>d</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[310]||(s[310]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L48-L52",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[310]})]),i("details",Ls,[i("summary",null,[s[312]||(s[312]=i("a",{id:"Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior, Any}",href:"#Comrade.instrumentmodel-Tuple{Comrade.AbstractVLBIPosterior, Any}"},[i("span",{class:"jlbinding"},"Comrade.instrumentmodel")],-1)),s[313]||(s[313]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[315]||(s[315]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">instrumentmodel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Returns the instrument model of a posterior using the parameter values <code>θ</code>. The output will be a <code>SiteArray</code> of the Jones matrices for each site, time, and frequency.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[314]||(s[314]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L146-L151",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[314]})]),i("details",ws,[i("summary",null,[s[316]||(s[316]=i("a",{id:"Comrade.forward_model",href:"#Comrade.forward_model"},[i("span",{class:"jlbinding"},"Comrade.forward_model")],-1)),s[317]||(s[317]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[319]||(s[319]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">forward_model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Computes the forward model visibilities of the posterior <code>d</code> with parameters <code>θ</code>. Note these are the complex visiblities or the coherency matrices, not the actual data products observed.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[318]||(s[318]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L114-L120",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[318]})]),i("details",Ms,[i("summary",null,[s[320]||(s[320]=i("a",{id:"Comrade.prior_sample",href:"#Comrade.prior_sample"},[i("span",{class:"jlbinding"},"Comrade.prior_sample")],-1)),s[321]||(s[321]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[323]||(s[323]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prior_sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRandom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre></div><p>Returns sample from the prior distribution of the posterior. If dims is specified then multiple independent draws are returned with shape dims.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[322]||(s[322]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/abstract.jl#L97-L102",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[322]})]),i("details",Rs,[i("summary",null,[s[324]||(s[324]=i("a",{id:"Comrade.likelihood",href:"#Comrade.likelihood"},[i("span",{class:"jlbinding"},"Comrade.likelihood")],-1)),s[325]||(s[325]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[327]||(s[327]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">likelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ConditionedLikelihood</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, μ)</span></span></code></pre></div><p>Returns the likelihood of the model, with parameters μ. That is, we return the distribution of the data given the model parameters μ. Samples from this distribution are simulated data.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[326]||(s[326]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/likelihood.jl#L8-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[326]})]),i("details",Os,[i("summary",null,[s[328]||(s[328]=i("a",{id:"Comrade.VLBIPosterior",href:"#Comrade.VLBIPosterior"},[i("span",{class:"jlbinding"},"Comrade.VLBIPosterior")],-1)),s[329]||(s[329]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[331]||(s[331]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(skymodel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, instumentmodel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              dataproducts</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationTable...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">              admode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_runtime_activity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Reverse))</span></span></code></pre></div><p>Creates a VLBILikelihood using the <code>skymodel</code> its related metadata <code>skymeta</code> and the <code>instrumentmodel</code> and its metadata <code>instumentmeta</code>. The <code>model</code> is a function that converts from parameters <code>θ</code> to a Comrade AbstractModel which can be used to compute <a href="/Comrade.jl/stable/base_api#ComradeBase.visibilitymap"><code>visibilitymap</code></a> and a set of <code>metadata</code> that is used by <code>model</code> to compute the model.</p><p>To enable automatic differentiation, the <code>admode</code> keyword argument can be set to any <code>EnzymeCore.Mode</code> type of if no AD is desired then <code>nothing</code>. The default is <code>Enzyme.set_runtime_activity(Enzyme.Reverse)</code> which should work for essentially every problem. Note that runtime activity does have a perfomance cost, and as Enzyme and Comrade matures we expect this to not need runtime activity.</p><p><strong>Warning</strong></p><p>The <code>model</code> itself must be a two argument function where the first argument is the set of model parameters and the second is a container that holds all the additional information needed to construct the model. An example of this is when the model needs some precomputed cache to define the model.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dlcamp, dcphase </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract_table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LogClosureAmplitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClosurePhases</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">array </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> arrayconfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dlcamp)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sky</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(θ, metadata)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    (; r, a) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> θ</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> stretched</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ExtendedRing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a), r, r)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skyprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)), a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Uniform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">g  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imagepixels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">μas2rad</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skym </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sky, skyprior, g)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">G </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SingleStokesGain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pg))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">intprior </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (lg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            pg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ArrayPrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IIDSitePrior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiagVonMises</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">π</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">intmodel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> InstrumentModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(G, intprior, array)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">post </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(skym, intmodel, dlcamp, dcphase)</span></span></code></pre></div>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[330]||(s[330]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/vlbiposterior.jl#L14-L60",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[330]})]),i("details",Ns,[i("summary",null,[s[332]||(s[332]=i("a",{id:"Comrade.simulate_observation",href:"#Comrade.simulate_observation"},[i("span",{class:"jlbinding"},"Comrade.simulate_observation")],-1)),s[333]||(s[333]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[335]||(s[335]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">simulate_observation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([rng</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Random.AbstractRNG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ; add_thermal_noise</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a simulated observation using the posterior and its data <code>post</code> using the parameter values <code>θ</code>. In Bayesian terminology this is a draw from the posterior predictive distribution.</p><p>If <code>add_thermal_noise</code> is true then baseline based thermal noise is added. Otherwise, we just return the model visibilities.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[334]||(s[334]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/vlbiposterior.jl#L118-L126",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[334]})]),i("details",Hs,[i("summary",null,[s[336]||(s[336]=i("a",{id:"Comrade.residuals",href:"#Comrade.residuals"},[i("span",{class:"jlbinding"},"Comrade.residuals")],-1)),s[337]||(s[337]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[339]||(s[339]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">residuals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, θ)</span></span></code></pre></div><p>Compute the residuals for each data product in <code>post</code> using the parameter values <code>θ</code>. The resturn objects are <code>EHTObservationTables</code>, where the measurements are the residuals.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[338]||(s[338]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/vlbiposterior.jl#L145-L150",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[338]})]),i("details",Js,[i("summary",null,[s[340]||(s[340]=i("a",{id:"Comrade.TransformedVLBIPosterior",href:"#Comrade.TransformedVLBIPosterior"},[i("span",{class:"jlbinding"},"Comrade.TransformedVLBIPosterior")],-1)),s[341]||(s[341]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[343]||(s[343]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TransformedVLBIPosterior{P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, T} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Comrade.AbstractVLBIPosterior</span></span></code></pre></div><p>A transformed version of a <code>VLBIPosterior</code> object. This is an internal type that an end user shouldn&#39;t have to directly construct. To construct a transformed posterior see the <a href="/Comrade.jl/stable/api#HypercubeTransform.asflat-Tuple{VLBIPosterior}"><code>asflat</code></a>, <a href="/Comrade.jl/stable/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[342]||(s[342]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/transformed.jl#L3-L8",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[342]})]),i("details",qs,[i("summary",null,[s[344]||(s[344]=i("a",{id:"TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}",href:"#TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}"},[i("span",{class:"jlbinding"},"TransformVariables.transform")],-1)),s[345]||(s[345]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[347]||(s[347]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(posterior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TransformedVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Transforms the value <code>x</code> from the transformed space (e.g. unit hypercube if using <a href="/Comrade.jl/stable/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a>) to parameter space which is usually encoded as a <code>NamedTuple</code>.</p><p>For the inverse transform see <a href="/Comrade.jl/stable/api#TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>inverse</code></a></p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[346]||(s[346]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/transformed.jl#L28-L35",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[346]})]),i("details",Gs,[i("summary",null,[s[348]||(s[348]=i("a",{id:"TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}",href:"#TransformVariables.inverse-Tuple{Comrade.TransformedVLBIPosterior, Any}"},[i("span",{class:"jlbinding"},"TransformVariables.inverse")],-1)),s[349]||(s[349]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[351]||(s[351]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(posterior</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TransformedVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, x)</span></span></code></pre></div><p>Transforms the value <code>y</code> from parameter space to the transformed space (e.g. unit hypercube if using <a href="/Comrade.jl/stable/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a>).</p><p>For the inverse transform see <a href="/Comrade.jl/stable/api#TransformVariables.transform-Tuple{Comrade.TransformedVLBIPosterior, Any}"><code>transform</code></a></p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[350]||(s[350]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/transformed.jl#L39-L46",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[350]})]),i("details",zs,[i("summary",null,[s[352]||(s[352]=i("a",{id:"HypercubeTransform.ascube-Tuple{VLBIPosterior}",href:"#HypercubeTransform.ascube-Tuple{VLBIPosterior}"},[i("span",{class:"jlbinding"},"HypercubeTransform.ascube")],-1)),s[353]||(s[353]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[355]||(s[355]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ascube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a flattened version of the posterior where the parameters are transformed to live in (0, 1), i.e. the unit hypercube.</p><p>This returns a <code>TransformedVLBIPosterior</code> that obeys the <code>DensityInterface</code> and can be evaluated in the usual manner, i.e. <code>logdensityof</code>. Note that the transformed posterior automatically includes the terms log-jacobian terms of the transformation.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tpost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ascube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prior_sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logdensityof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost, x0)</span></span></code></pre></div><p><strong>Notes</strong></p><p>This is the transform that should be used if using typical NestedSampling methods, i.e. <code>ComradeNested</code>. For the transformation to unconstrained space see <a href="/Comrade.jl/stable/api#HypercubeTransform.asflat-Tuple{VLBIPosterior}"><code>asflat</code></a></p>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[354]||(s[354]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/transformed.jl#L138-L158",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[354]})]),i("details",Us,[i("summary",null,[s[356]||(s[356]=i("a",{id:"HypercubeTransform.asflat-Tuple{VLBIPosterior}",href:"#HypercubeTransform.asflat-Tuple{VLBIPosterior}"},[i("span",{class:"jlbinding"},"HypercubeTransform.asflat")],-1)),s[357]||(s[357]=t()),e(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[359]||(s[359]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">asflat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Construct a flattened version of the posterior where the parameters are transformed to live in (-∞, ∞).</p><p>This returns a <code>TransformedVLBIPosterior</code> that obeys the <code>DensityInterface</code> and can be evaluated in the usual manner, i.e. <code>logdensityof</code>. Note that the transformed posterior automatically includes the terms log-jacobian terms of the transformation.</p><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tpost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ascube</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> prior_sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logdensityof</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tpost, x0)</span></span></code></pre></div><p><strong>Notes</strong></p><p>This is the transform that should be used if using typical MCMC methods, i.e. NUTS. For the transformation to the unit hypercube see <a href="/Comrade.jl/stable/api#HypercubeTransform.ascube-Tuple{VLBIPosterior}"><code>ascube</code></a></p>`,7)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[358]||(s[358]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/transformed.jl#L49-L70",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[358]})]),s[498]||(s[498]=i("h3",{id:"Inference",tabindex:"-1"},[t("Inference "),i("a",{class:"header-anchor",href:"#Inference","aria-label":'Permalink to "Inference {#Inference}"'},"​")],-1)),i("details",Ks,[i("summary",null,[s[360]||(s[360]=i("a",{id:"Comrade.comrade_opt",href:"#Comrade.comrade_opt"},[i("span",{class:"jlbinding"},"Comrade.comrade_opt")],-1)),s[361]||(s[361]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[363]||(s[363]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">comrade_opt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, opt, adtype</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; initial_params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Optimize the posterior <code>post</code> using the <code>opt</code> optimizer. The <code>adtype</code> specifies the automatic differentiation. The <code>args/kwargs</code> are forwarded to `the specific optimization package.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>This function won&#39;t have any methods until the optimization package is loaded. We recommend loading the <code>Optimization.jl</code> package.</p></div>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[362]||(s[362]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/optimization.jl#L3-L12",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[362]})]),i("details",Ws,[i("summary",null,[s[364]||(s[364]=i("a",{id:"Comrade.MemoryStore",href:"#Comrade.MemoryStore"},[i("span",{class:"jlbinding"},"Comrade.MemoryStore")],-1)),s[365]||(s[365]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[367]||(s[367]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MemoryStore</span></span></code></pre></div><p>Stored the HMC samplers in memory or ram.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[366]||(s[366]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/inference.jl#L10-L14",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[366]})]),i("details",$s,[i("summary",null,[s[368]||(s[368]=i("a",{id:"Comrade.DiskStore",href:"#Comrade.DiskStore"},[i("span",{class:"jlbinding"},"Comrade.DiskStore")],-1)),s[369]||(s[369]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[371]||(s[371]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiskStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Results&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, stride</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Type that specifies to save the samples results to disk.</p><p><strong>Fields</strong></p><ul><li><p><code>name</code>: Path of the directory where the results will be saved. If the path does not exist it will be automatically created.</p></li><li><p><code>stride</code>: The output stride, i.e. every <code>stride</code> steps the MCMC output will be dumped to disk.</p></li></ul>',4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[370]||(s[370]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/inference.jl#L18-L25",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[370]})]),i("details",Xs,[i("summary",null,[s[372]||(s[372]=i("a",{id:"Comrade.load_samples",href:"#Comrade.load_samples"},[i("span",{class:"jlbinding"},"Comrade.load_samples")],-1)),s[373]||(s[373]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[375]||(s[375]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DiskOutput</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, indices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Base.Colon, UnitRange, StepRange}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">load_samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, indices</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Base.Colon, UnitRange, StepRange}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Colon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); table</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:samples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>The the results from a HMC run saved to disk. To read in the output the user can either pass the resulting <code>out</code> object, or the path to the directory that the results were saved, i.e. the path specified in <a href="/Comrade.jl/stable/api#Comrade.DiskStore"><code>DiskStore</code></a>.</p><p><strong>Arguments</strong></p><ul><li><p><code>out::Union{String, DiskOutput}</code>: If <code>out</code> is a string is must point to the direct that the <code>DiskStore</code> pointed to. Otherwise it is what is directly returned from sample.</p></li><li><p><code>indices</code>: The indices of the that you want to load into memory. The default is to load the entire table.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>table</code>: A string specifying the table you wish to read in. There are two options: :samples which corresponds to the actual MCMC chain, and <code>stats</code> which corresponds to additional information about the sampler, e.g., the log density of each sample and tree statistics.</li></ul>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[374]||(s[374]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/inference.jl#L46-L64",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[374]})]),i("details",Ys,[i("summary",null,[s[376]||(s[376]=i("a",{id:"Comrade.PosteriorSamples",href:"#Comrade.PosteriorSamples"},[i("span",{class:"jlbinding"},"Comrade.PosteriorSamples")],-1)),s[377]||(s[377]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[379]||(s[379]=l('<p>PosteriorSamples(chain, stats; metadata=Dict(:sampler=&gt;:unknown))</p><p>This is the default sampler output from Comrade MCMC extensions. The object contains the posterior samples, the sampler statistics, and metadata about the sampler used.</p><p>Indexing this array behaves like indexing the samples organized as a StructArray. By default all NamedTuples and Tuples are unwrapped.</p><p>To access the samples use <a href="/Comrade.jl/stable/api#Comrade.postsamples"><code>postsamples</code></a> and to access the sampler statistics use <a href="/Comrade.jl/stable/api#Comrade.samplerstats"><code>samplerstats</code></a>, or the acesss sampler specific information use <a href="/Comrade.jl/stable/api#Comrade.samplerinfo"><code>samplerinfo</code></a>.</p><p>To recursively map a function over the samples the unexported <a href="/Comrade.jl/stable/api#Comrade.rmap"><code>Comrade.rmap</code></a>.</p>',5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[378]||(s[378]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/posteriorsamples.jl#L46-L59",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[378]})]),i("details",Qs,[i("summary",null,[s[380]||(s[380]=i("a",{id:"Comrade.postsamples",href:"#Comrade.postsamples"},[i("span",{class:"jlbinding"},"Comrade.postsamples")],-1)),s[381]||(s[381]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[383]||(s[383]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">postsamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the samples from the PosteriorSamples object <code>s</code></p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[382]||(s[382]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/posteriorsamples.jl#L149-L153",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[382]})]),i("details",Zs,[i("summary",null,[s[384]||(s[384]=i("a",{id:"Comrade.samplerstats",href:"#Comrade.samplerstats"},[i("span",{class:"jlbinding"},"Comrade.samplerstats")],-1)),s[385]||(s[385]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[387]||(s[387]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerstats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the sampler statistics from the PosteriorSamples object <code>s</code></p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[386]||(s[386]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/posteriorsamples.jl#L158-L162",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[386]})]),i("details",si,[i("summary",null,[s[388]||(s[388]=i("a",{id:"Comrade.samplerinfo",href:"#Comrade.samplerinfo"},[i("span",{class:"jlbinding"},"Comrade.samplerinfo")],-1)),s[389]||(s[389]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[391]||(s[391]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">samplerinfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the metadata from the PosteriorSamples object <code>s</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[390]||(s[390]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/posteriorsamples.jl#L168-L172",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[390]})]),i("details",ii,[i("summary",null,[s[392]||(s[392]=i("a",{id:"Comrade.resample_equal",href:"#Comrade.resample_equal"},[i("span",{class:"jlbinding"},"Comrade.resample_equal")],-1)),s[393]||(s[393]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[395]||(s[395]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">resample_equal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, nsamples</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Resample the posterior samples so you have <code>nsamples</code> of equal weight. In order for this method to be applicable a <code>:weights</code> field must be present in the sampler statistics and the weight must correspond to the probability weights of the samples.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[394]||(s[394]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/posteriorsamples.jl#L178-L184",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[394]})]),i("details",ai,[i("summary",null,[s[396]||(s[396]=i("a",{id:"Comrade.residual",href:"#Comrade.residual"},[i("span",{class:"jlbinding"},"Comrade.residual")],-1)),s[397]||(s[397]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[399]||(s[399]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">residual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Plots the normalized residuals for the posterior <code>post</code> given the parameters <code>p</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[398]||(s[398]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/visualizations/data.jl#L226-L230",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[398]})]),i("details",ei,[i("summary",null,[s[400]||(s[400]=i("a",{id:"Comrade.residual_data",href:"#Comrade.residual_data"},[i("span",{class:"jlbinding"},"Comrade.residual_data")],-1)),s[401]||(s[401]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[403]||(s[403]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">residual_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the residuals for the model visibilities <code>vis</code> and the data <code>data</code>. The residuals are not normalized and the returned object is an <code>EHTObservationTable</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[402]||(s[402]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/operations.jl#L112-L117",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[402]})]),i("details",ti,[i("summary",null,[s[404]||(s[404]=i("a",{id:"Comrade.chi2",href:"#Comrade.chi2"},[i("span",{class:"jlbinding"},"Comrade.chi2")],-1)),s[405]||(s[405]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[407]||(s[407]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">chi2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVLBIPosterior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Returns a tuple of the chi-squared values for each data product in the posterior <code>post</code> given the parameters <code>p</code>. Note that the chi-square is not reduced.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[406]||(s[406]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/posterior/vlbiposterior.jl#L157-L162",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[406]})]),s[499]||(s[499]=i("h2",{id:"Misc",tabindex:"-1"},[t("Misc "),i("a",{class:"header-anchor",href:"#Misc","aria-label":'Permalink to "Misc {#Misc}"'},"​")],-1)),i("details",li,[i("summary",null,[s[408]||(s[408]=i("a",{id:"Comrade.site_tuple",href:"#Comrade.site_tuple"},[i("span",{class:"jlbinding"},"Comrade.site_tuple")],-1)),s[409]||(s[409]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[411]||(s[411]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, default; reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, default; reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, default; reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Convienence function that will construct a <code>NamedTuple</code> of objects whose names are the <code>sites</code> in the observation <code>obs</code> or explicitly in the argument <code>sites</code>. The <code>NamedTuple</code> will be filled with <code>default</code> if no kwargs are defined otherwise each kwarg (key, value) pair denotes a sites and value pair.</p><p>Optionally the user can specify a <code>reference</code> sites that will be dropped from the tuple. This is useful for selecting a reference sites for gain phases</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sites </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:AA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:AP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:LM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:PV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> FixedSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ScanSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TrackSeg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> site_tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sites, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); reference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:AA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AP </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), LM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), PV </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Normal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,5)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[410]||(s[410]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/instrument/utility.jl#L3-L28",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[410]})]),i("details",ni,[i("summary",null,[s[412]||(s[412]=i("a",{id:"Comrade.dirty_image",href:"#Comrade.dirty_image"},[i("span",{class:"jlbinding"},"Comrade.dirty_image")],-1)),s[413]||(s[413]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[415]||(s[415]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirty_image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservation{&lt;:EHTVisibilityDatum}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T</span></span></code></pre></div><p>Computes the dirty image of the complex visibilities assuming a field of view of <code>fov</code> and number of pixels <code>npix</code> using the complex visibilities found in the observation <code>obs</code>.</p><p>The <code>dirty image</code> is the inverse Fourier transform of the measured visibilties assuming every other visibility is zero.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[414]||(s[414]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/dirty_image.jl#L28-L37",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[414]})]),i("details",ri,[i("summary",null,[s[416]||(s[416]=i("a",{id:"Comrade.dirty_beam",href:"#Comrade.dirty_beam"},[i("span",{class:"jlbinding"},"Comrade.dirty_beam")],-1)),s[417]||(s[417]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[419]||(s[419]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dirty_beam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fov</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, npix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservation{&lt;:EHTVisibilityDatum}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the dirty beam of the complex visibilities assuming a field of view of <code>fov</code> and number of pixels <code>npix</code> using baseline coverage found in <code>obs</code>.</p><p>The <code>dirty beam</code> is the inverse Fourier transform of the (u,v) coverage assuming every visibility is unity and everywhere else is zero.</p>',3)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[418]||(s[418]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/dirty_image.jl#L52-L61",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[418]})]),i("details",oi,[i("summary",null,[s[420]||(s[420]=i("a",{id:"Comrade.beamsize",href:"#Comrade.beamsize"},[i("span",{class:"jlbinding"},"Comrade.beamsize")],-1)),s[421]||(s[421]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[424]||(s[424]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ac</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the array <code>ac</code> as the inverse of the longest baseline distance.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[422]||(s[422]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/array.jl#L39-L44",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[422]}),s[425]||(s[425]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">beamsize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the approximate beam size of the observation <code>obs</code> as the inverse of the longest baseline distance.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[423]||(s[423]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L102-L107",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[423]})]),i("details",pi,[i("summary",null,[s[426]||(s[426]=i("a",{id:"Comrade.apply_fluctuations",href:"#Comrade.apply_fluctuations"},[i("span",{class:"jlbinding"},"Comrade.apply_fluctuations")],-1)),s[427]||(s[427]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[429]||(s[429]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply_fluctuations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, mimg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, δ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply multiplicative fluctuations to an image <code>mimg</code> with fluctuations <code>δ</code>. The function <code>f</code> is applied to the fluctuations and then the the transfored δ are multiplicatively applied to the image.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[428]||(s[428]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/mrf_image.jl#L4-L10",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[428]})]),i("details",di,[i("summary",null,[s[430]||(s[430]=i("a",{id:"Comrade.apply_fluctuations!",href:"#Comrade.apply_fluctuations!"},[i("span",{class:"jlbinding"},"Comrade.apply_fluctuations!")],-1)),s[431]||(s[431]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[433]||(s[433]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">apply_fluctuations!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnitFluxMap{F}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, out</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, mimg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, δ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Apply multiplicative fluctuations to an image <code>mimg</code> with fluctuations <code>δ</code> using the transformation <code>t</code>, by broadcasting the function <code>F</code> over the array <code>δ</code> and then normalizing the resulting array to have unit flux.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[432]||(s[432]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/mrf_image.jl#L62-L68",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[432]})]),i("details",hi,[i("summary",null,[s[434]||(s[434]=i("a",{id:"Comrade.UnitFluxMap",href:"#Comrade.UnitFluxMap"},[i("span",{class:"jlbinding"},"Comrade.UnitFluxMap")],-1)),s[435]||(s[435]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[437]||(s[437]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnitFluxMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f)</span></span></code></pre></div><p>A transformation that broadcasts a function <code>f</code> over an array, and the normalizes the resulting array to have unit flux. This is used with the function <a href="/Comrade.jl/stable/api#Comrade.apply_fluctuations"><code>apply_fluctuations</code></a> while imaging.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[436]||(s[436]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/mrf_image.jl#L50-L56",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[436]})]),i("details",ki,[i("summary",null,[s[438]||(s[438]=i("a",{id:"Comrade.corr_image_prior",href:"#Comrade.corr_image_prior"},[i("span",{class:"jlbinding"},"Comrade.corr_image_prior")],-1)),s[439]||(s[439]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[441]||(s[441]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">corr_image_prior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, corr_length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GMRF, order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lower</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, upper</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">corr_image_prior</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, obs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GMRF, order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lower</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, upper</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">max</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(grid)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Construct a correlated image prior, for the image with grid <code>grid</code>, and using the observation <code>dvis</code>. The correlation will be a Markov Random Field (MRF) of order <code>order</code>, with the base distribution <code>base</code>. For <code>base</code> you can choose any of the Markov random fields defined in <code>VLBIImagePriors</code>, the default is <code>GMRF</code> which is a Gaussian MRF.</p><p>As part the prior will be a hierarchical prior with the correlation length as a hyperparameter. By default the correlation parameter uses a first order inverse gamma distribution for its prior. The <code>frac_below_beam</code> parameter is the fraction of the correlation prior mass that is below the beam size of the observation <code>dvis</code>. The <code>lower</code> and <code>upper</code> parameters are the lower and upper bounds of the correlation length, we don&#39;t let the correlation length to be too small or large for numerical reasons.</p><p><strong>Arguments</strong></p><ul><li><p><code>grid::AbstractRectiGrid</code>: The grid of the image to be reconstructed.</p></li><li><p><code>corr_length</code>: The correlation length of the MRF. If this is an <code>EHTObservationTable</code> then the corr_length will be the approximate beam size of the observation.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>base</code>: The base distribution of the MRF. Options include <code>GMRF</code>, <code>EMRF</code>, and <code>CMRF</code></p></li><li><p><code>order</code>: The order of the MRF. Default is first order</p></li><li><p><code>frac_below_beam</code>: The fraction of the correlation prior mass that is below the beam size of the observation <code>dvis</code>. the default is <code>0.01</code> which means only 1% of the log-image correlation length is below the beam size.</p></li><li><p><code>lower</code>: The lower bound of the correlation length. Default is <code>1.0</code></p></li><li><p><code>upper</code>: The upper bound of the correlation length. Default is <code>2*max(size(grid)...)</code></p></li></ul><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>An order &gt; 2 will be slow since we switch to a sparse matrix representation of the MRF.</p></div>`,8)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[440]||(s[440]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/mrf_image.jl#L104-L134",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[440]})]),i("details",gi,[i("summary",null,[s[442]||(s[442]=i("a",{id:"Comrade.rmap",href:"#Comrade.rmap"},[i("span",{class:"jlbinding"},"Comrade.rmap")],-1)),s[443]||(s[443]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[445]||(s[445]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PosteriorSamples</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Recursively map a function <code>f</code> over the elements of <code>x</code>. For instance to compute the mean of all fields you can do <code>Comrade.rmap(mean, chain)</code></p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[444]||(s[444]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/inference/posteriorsamples.jl#L101-L106",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[444]})]),s[500]||(s[500]=i("h2",{id:"Internal-Not-Public-API",tabindex:"-1"},[t("Internal (Not Public API) "),i("a",{class:"header-anchor",href:"#Internal-Not-Public-API","aria-label":'Permalink to "Internal (Not Public API) {#Internal-Not-Public-API}"'},"​")],-1)),i("details",ci,[i("summary",null,[s[446]||(s[446]=i("a",{id:"Comrade.build_datum",href:"#Comrade.build_datum"},[i("span",{class:"jlbinding"},"Comrade.build_datum")],-1)),s[447]||(s[447]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[449]||(s[449]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">build_datum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Build the datum <code>F</code> for a given observation table <code>data</code>. This is an internal method that users shouldn&#39;t have to deal with directly unless they are implementing a new <code>AbstractObservationTable</code>.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[448]||(s[448]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/obstable.jl#L80-L86",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[448]})]),i("details",bi,[i("summary",null,[s[450]||(s[450]=i("a",{id:"Comrade.ObservedSkyModel",href:"#Comrade.ObservedSkyModel"},[i("span",{class:"jlbinding"},"Comrade.ObservedSkyModel")],-1)),s[451]||(s[451]=t()),e(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[453]||(s[453]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ObservedSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sky</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSkyModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, array</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArrayConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a sky model that has been theoretically observed by an array with configuration <code>array</code>. Note that this is not a public facing method and is used internally to construct the observed sky model for use in <a href="/Comrade.jl/stable/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a>. Users should construct a <a href="/Comrade.jl/stable/api#Comrade.SkyModel"><code>SkyModel</code></a> and pass that to a <a href="/Comrade.jl/stable/api#Comrade.VLBIPosterior"><code>VLBIPosterior</code></a> object instead.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[452]||(s[452]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/skymodels/models.jl#L55-L63",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[452]})]),s[501]||(s[501]=i("h3",{id:"eht-imaging-interface-Internal",tabindex:"-1"},[t("eht-imaging interface (Internal) "),i("a",{class:"header-anchor",href:"#eht-imaging-interface-Internal","aria-label":'Permalink to "eht-imaging interface (Internal) {#eht-imaging-interface-Internal}"'},"​")],-1)),i("details",ui,[i("summary",null,[s[454]||(s[454]=i("a",{id:"Comrade.extract_amp",href:"#Comrade.extract_amp"},[i("span",{class:"jlbinding"},"Comrade.extract_amp")],-1)),s[455]||(s[455]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[457]||(s[457]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_amp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the visibility amplitudes from an <code>obs</code>. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[456]||(s[456]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L161-L167",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[456]})]),i("details",yi,[i("summary",null,[s[458]||(s[458]=i("a",{id:"Comrade.extract_cphase",href:"#Comrade.extract_cphase"},[i("span",{class:"jlbinding"},"Comrade.extract_cphase")],-1)),s[459]||(s[459]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[461]||(s[461]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_cphase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the closure phases from an <code>obs</code>. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[460]||(s[460]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L145-L151",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[460]})]),i("details",mi,[i("summary",null,[s[462]||(s[462]=i("a",{id:"Comrade.extract_lcamp",href:"#Comrade.extract_lcamp"},[i("span",{class:"jlbinding"},"Comrade.extract_lcamp")],-1)),s[463]||(s[463]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[465]||(s[465]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_lcamp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the log-closure amplitudes from an <code>obs</code>. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[464]||(s[464]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L153-L159",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[464]})]),i("details",Ei,[i("summary",null,[s[466]||(s[466]=i("a",{id:"Comrade.extract_vis",href:"#Comrade.extract_vis"},[i("span",{class:"jlbinding"},"Comrade.extract_vis")],-1)),s[467]||(s[467]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[469]||(s[469]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_vis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the stokes I complex visibilities from an obs. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[468]||(s[468]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L169-L175",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[468]})]),i("details",Ci,[i("summary",null,[s[470]||(s[470]=i("a",{id:"Comrade.extract_coherency",href:"#Comrade.extract_coherency"},[i("span",{class:"jlbinding"},"Comrade.extract_coherency")],-1)),s[471]||(s[471]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[473]||(s[473]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract_coherency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obs; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extracts the full coherency matrix from an observation. This is an internal method for dispatch. Only use this if interfacing Comrade with a new data type.</p>',2)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[472]||(s[472]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/src/observations/dataproducts.jl#L177-L183",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[472]})]),s[502]||(s[502]=i("h2",{id:"Plotting",tabindex:"-1"},[t("Plotting "),i("a",{class:"header-anchor",href:"#Plotting","aria-label":'Permalink to "Plotting {#Plotting}"'},"​")],-1)),s[503]||(s[503]=i("p",null,[i("strong",null,"Warning"),t(" A user must first load "),i("code",null,"Makie"),t(" or a "),i("code",null,"Makie"),t(" backend, e.g., "),i("code",null,"CairoMakie"),t(" to use this functionality")],-1)),i("details",fi,[i("summary",null,[s[474]||(s[474]=i("a",{id:"Comrade.plotfields",href:"#Comrade.plotfields"},[i("span",{class:"jlbinding"},"Comrade.plotfields")],-1)),s[475]||(s[475]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[477]||(s[477]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plotfields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(obsdata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field1, field2; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            site1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, site2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), legend_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), scatter_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;))</span></span></code></pre></div><p>Plots two data fields against each other.</p><p><strong>Arguments</strong></p><ul><li><p><code>obsdata</code> : EHTObservationTable containing the data to plot (closure quantities not supported yet)</p></li><li><p><code>field1</code> and <code>field2</code> : The fields to plot. field1 - x axis, field2 - y axis If field1 or field2 is a function it will apply to <code>datatable(obsdata)</code> to get the value If field1 or field2 is a symbol, it will look for a predefined function:</p><ul><li><p>:U - baseline u coordinate</p></li><li><p>:V - baseline v coordinate</p></li><li><p>:Ti - time</p></li><li><p>:Fr - frequency</p></li><li><p>:measure - measurement</p></li><li><p>:noise - noise</p></li><li><p>:amp - visibility amplitude</p></li><li><p>:phase - visibility phase</p></li><li><p>:uvdist - projected baseline length</p></li><li><p>:snr - signal to noise ratio</p></li><li><p>:res - normalized residual visibilities (only if obsdata contains the residuals)</p></li></ul></li><li><p><code>site1</code> and <code>site2</code> : Keywords for the sites forming the baseline being plotted, e.g. :ALMA, :APEX.</p></li><li><p><code>axis_kwargs</code> : Keyword arguments for each subplot&#39;s Axis.</p></li><li><p><code>legend_kwargs</code> : Keyword arguments passed to the figure legend.</p></li><li><p><code>scatter_kwargs</code> : Keyword arguments passed to scatter! in each subplot.</p></li></ul>`,4)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[476]||(s[476]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/ext/ComradeMakieExt.jl#L226-L255",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[476]})]),i("details",Fi,[i("summary",null,[s[478]||(s[478]=i("a",{id:"Comrade.axisfields",href:"#Comrade.axisfields"},[i("span",{class:"jlbinding"},"Comrade.axisfields")],-1)),s[479]||(s[479]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[481]||(s[481]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axisfields</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fig, obsdata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">EHTObservationField</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, field1, field2;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            legend</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, conjugate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, axis_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), legend_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), scatter_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;))</span></span></code></pre></div><p>Plots two data fields from <code>obsdata</code> against each other on <code>fig</code>, returns a Makie Axis which can be used to configure subplots.</p><p><strong>Arguments</strong></p><ul><li><p><code>fig</code>: The GridPosition i.e. <code>fig[i,j]</code> to plot the data on.</p></li><li><p><code>obsdata</code> : EHTObservationTable containing the data to plot (closure quantities not supported yet)</p></li><li><p><code>field1</code> and <code>field2</code> : The fields to plot. field1 - x axis, field2 - y axis If field1 or field2 is a function it will apply to <code>datatable(obsdata)</code> to get the value If field1 or field2 is a symbol, it will look for a predefined function:</p><ul><li><p>:U - baseline u coordinate</p></li><li><p>:V - baseline v coordinate</p></li><li><p>:Ti - time</p></li><li><p>:Fr - frequency</p></li><li><p>:measure - measurement</p></li><li><p>:noise - noise</p></li><li><p>:amp - visibility amplitude</p></li><li><p>:phase - visibility phase</p></li><li><p>:uvdist - projected baseline length</p></li><li><p>:snr - signal to noise ratio</p></li><li><p>:res - normalized residual visibilities (only if obsdata contains the residuals)</p></li></ul></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>legend</code> : If true, legend is shown. If false, legend is hidden.</p></li><li><p><code>conjugate</code> : Only relevant if plotting (u,v) coverage. If true, data is conjugated. If false, data is plotted as is.</p></li><li><p><code>site1</code> and <code>site2</code> : Keywords for the sites forming the baseline being plotted, e.g. :ALMA, :APEX.</p></li><li><p><code>axis_kwargs</code> : Keyword arguments for each subplot&#39;s Axis.</p></li><li><p><code>legend_kwargs</code> : Keyword arguments passed to the figure legend.</p></li><li><p><code>scatter_kwargs</code> : Keyword arguments passed to scatter! in each subplot.</p></li></ul>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[480]||(s[480]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/ext/ComradeMakieExt.jl#L339-L373",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[480]})]),i("details",_i,[i("summary",null,[s[482]||(s[482]=i("a",{id:"Comrade.plotcaltable",href:"#Comrade.plotcaltable"},[i("span",{class:"jlbinding"},"Comrade.plotcaltable")],-1)),s[483]||(s[483]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[485]||(s[485]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plotcaltable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">125</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, layout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, markers</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, labels</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    axis_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), legend_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), figure_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;), scatter_kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;))</span></span></code></pre></div><p>Automatically generate a grid of subplots plotting the Comrade.CalTable information. Each subplot corresponds to a different station in the array.</p><p><strong>Argments</strong></p><ul><li><code>gt</code> : The CalTables to plot.</li></ul><p><strong>Keyword Arguments</strong></p><ul><li><p><code>width</code> : Subplot width</p></li><li><p><code>height</code> : Subplot height</p></li><li><p><code>layout</code> : Subplot layout (optional).</p></li><li><p><code>axis_kwargs</code> : Keyword arguments for each subplot&#39;s Axis.</p></li><li><p><code>legend_kwargs</code> : Keyword arguments passed to the figure legend.</p></li><li><p><code>figure_kwargs</code> : Keyword arguments passed to Figure().</p></li><li><p><code>scatter_kwargs</code> : Keyword arguments passed to scatter! in each subplot.</p></li></ul>`,6)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[484]||(s[484]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/ext/ComradeMakieExt.jl#L515-L534",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[484]})]),i("details",Ti,[i("summary",null,[s[486]||(s[486]=i("a",{id:"Comrade.baselineplot",href:"#Comrade.baselineplot"},[i("span",{class:"jlbinding"},"Comrade.baselineplot")],-1)),s[487]||(s[487]=t()),e(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[489]||(s[489]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baselineplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, bl, fieldx, fieldy; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">baselineplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, fieldx, fieldy; kwargs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Plots the baseline <code>bl</code> with <code>fieldx</code> on the x axis and <code>fieldy</code> on the y axis.</p><p>If <code>bl</code> is a <code>Colon</code> or bl is not specified all baselines are plotted.</p><p><strong>Arguments</strong></p><ul><li><p><code>data</code> : The data to plot</p></li><li><p><code>field1</code> and <code>field2</code> : The fields to plot. field1 - x axis, field2 - y axis If <code>field1</code> or <code>field2</code> is a function, baselineplot will broadcast them over <code>datatable(obsdata)</code> to get the x and y values as the outputs from <code>field1.(datatable(obsdata))</code> and <code>field2.(datatable(obsdata))</code>. If field1 or field2 is a symbol, it will look for a predefined function:</p><ul><li><p>:U - baseline u coordinate</p></li><li><p>:V - baseline v coordinate</p></li><li><p>:Ti - time</p></li><li><p>:Fr - frequency</p></li><li><p>:measurement - measurement</p></li><li><p>:measwnoise - measurement and noise</p></li><li><p>:noise - noise</p></li><li><p>:amp - visibility amplitude</p></li><li><p>:phase - visibility phase</p></li><li><p>:uvdist - projected baseline length</p></li><li><p>:snr - signal to noise ratio</p></li><li><p>:res - normalized residual visibilities (only if obsdata contains the residuals)</p></li></ul></li></ul><p><strong>Specific Attributes</strong></p><ul><li><p><code>error</code> : If true, error bars are plotted. <strong>This assumes that the data is a <code>Measurement</code> type.</strong></p></li><li><p><code>color</code> : The color of the markers</p></li><li><p><code>colorim</code> : The color of the imaginary part of the data if it exists</p></li><li><p><code>marker</code> : The marker type</p></li><li><p><code>markersize</code> : The size of the markers</p></li><li><p><code>alpha</code> : The transparency of the markers</p></li></ul><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> baselineplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(log_closure_amplitudes, Comrade</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uvdist, Comrade</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">measwnoise, error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,9)),e(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[488]||(s[488]=[i("a",{href:"https://github.com/ptiede/Comrade.jl/blob/b0929b6bb7a7b973a9bdbfa0fc9435305b188bc3/ext/ComradeMakieExt.jl#L11-L53",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1,__:[488]})])])}const Pi=r(h,[["render",Ai]]);export{Ii as __pageData,Pi as default};
