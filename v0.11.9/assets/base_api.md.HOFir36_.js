import{_ as p,C as r,c as o,o as d,ai as l,j as i,G as a,a as t,w as n}from"./chunks/framework.BwSw6bqg.js";const xs=JSON.parse('{"title":"Base API","description":"","frontmatter":{},"headers":[],"relativePath":"base_api.md","filePath":"base_api.md","lastUpdated":null}'),h={name:"base_api.md"},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""},B={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},Q={class:"jldocstring custom-block",open:""},A={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},x={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-2.172ex"},xmlns:"http://www.w3.org/2000/svg",width:"28.827ex",height:"5.475ex",role:"img",focusable:"false",viewBox:"0 -1460 12741.6 2420","aria-hidden":"true"},D={class:"jldocstring custom-block",open:""},I={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},V={class:"jldocstring custom-block",open:""},L={class:"jldocstring custom-block",open:""},P={class:"jldocstring custom-block",open:""},w={class:"jldocstring custom-block",open:""},M={class:"jldocstring custom-block",open:""},H={class:"jldocstring custom-block",open:""},N={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},O={class:"jldocstring custom-block",open:""},z={class:"jldocstring custom-block",open:""},Z={class:"jldocstring custom-block",open:""},U={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},q={class:"jldocstring custom-block",open:""},Y={class:"jldocstring custom-block",open:""},X={class:"jldocstring custom-block",open:""},J={class:"jldocstring custom-block",open:""},W={class:"jldocstring custom-block",open:""},$={class:"jldocstring custom-block",open:""},K={class:"jldocstring custom-block",open:""},ss={class:"jldocstring custom-block",open:""},is={class:"jldocstring custom-block",open:""},es={class:"jldocstring custom-block",open:""},as={class:"jldocstring custom-block",open:""},ts={class:"jldocstring custom-block",open:""},ls={class:"jldocstring custom-block",open:""},ns={class:"jldocstring custom-block",open:""},os={class:"jldocstring custom-block",open:""},ds={class:"jldocstring custom-block",open:""},ps={class:"jldocstring custom-block",open:""},rs={class:"jldocstring custom-block",open:""},hs={class:"jldocstring custom-block",open:""},ks={class:"jldocstring custom-block",open:""},cs={class:"jldocstring custom-block",open:""},ms={class:"jldocstring custom-block",open:""},us={class:"jldocstring custom-block",open:""},gs={class:"jldocstring custom-block",open:""},ys={class:"jldocstring custom-block",open:""},bs={class:"jldocstring custom-block",open:""},Ts={class:"jldocstring custom-block",open:""},Cs={class:"jldocstring custom-block",open:""},fs={class:"jldocstring custom-block",open:""},Es={class:"jldocstring custom-block",open:""};function _s(Fs,s,js,Bs,vs,Qs){const e=r("Badge");return d(),o("div",null,[s[261]||(s[261]=l('<h1 id="Base-API" tabindex="-1">Base API <a class="header-anchor" href="#Base-API" aria-label="Permalink to &quot;Base API {#Base-API}&quot;">​</a></h1><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#ComradeBase.AbstractModel"><code>ComradeBase.AbstractModel</code></a></li><li><a href="#ComradeBase.AbstractPolarizedModel"><code>ComradeBase.AbstractPolarizedModel</code></a></li><li><a href="#ComradeBase.DensityAnalytic"><code>ComradeBase.DensityAnalytic</code></a></li><li><a href="#ComradeBase.IntensityMap"><code>ComradeBase.IntensityMap</code></a></li><li><a href="#ComradeBase.IntensityMap-Tuple{AbstractArray, ComradeBase.AbstractRectiGrid}"><code>ComradeBase.IntensityMap</code></a></li><li><a href="#ComradeBase.IsAnalytic"><code>ComradeBase.IsAnalytic</code></a></li><li><a href="#ComradeBase.MinimalHeader"><code>ComradeBase.MinimalHeader</code></a></li><li><a href="#ComradeBase.NoHeader"><code>ComradeBase.NoHeader</code></a></li><li><a href="#ComradeBase.NotAnalytic"><code>ComradeBase.NotAnalytic</code></a></li><li><a href="#ComradeBase.RectiGrid"><code>ComradeBase.RectiGrid</code></a></li><li><a href="#ComradeBase.Serial"><code>ComradeBase.Serial</code></a></li><li><a href="#ComradeBase.ThreadsEx"><code>ComradeBase.ThreadsEx</code></a></li><li><a href="#ComradeBase.UnstructuredDomain"><code>ComradeBase.UnstructuredDomain</code></a></li><li><a href="#ComradeBase.UnstructuredMap"><code>ComradeBase.UnstructuredMap</code></a></li><li><a href="#ComradeBase._visibilitymap"><code>ComradeBase._visibilitymap</code></a></li><li><a href="#ComradeBase._visibilitymap!"><code>ComradeBase._visibilitymap!</code></a></li><li><a href="#ComradeBase.allocate_imgmap"><code>ComradeBase.allocate_imgmap</code></a></li><li><a href="#ComradeBase.allocate_vismap"><code>ComradeBase.allocate_vismap</code></a></li><li><a href="#ComradeBase.amplitude-Tuple{Any, Any}"><code>ComradeBase.amplitude</code></a></li><li><a href="#ComradeBase.amplitudemap"><code>ComradeBase.amplitudemap</code></a></li><li><a href="#ComradeBase.axisdims"><code>ComradeBase.axisdims</code></a></li><li><a href="#ComradeBase.baseimage"><code>ComradeBase.baseimage</code></a></li><li><a href="#ComradeBase.bispectrum"><code>ComradeBase.bispectrum</code></a></li><li><a href="#ComradeBase.bispectrummap"><code>ComradeBase.bispectrummap</code></a></li><li><a href="#ComradeBase.centroid"><code>ComradeBase.centroid</code></a></li><li><a href="#ComradeBase.closure_phase"><code>ComradeBase.closure_phase</code></a></li><li><a href="#ComradeBase.closure_phasemap"><code>ComradeBase.closure_phasemap</code></a></li><li><a href="#ComradeBase.create_imgmap"><code>ComradeBase.create_imgmap</code></a></li><li><a href="#ComradeBase.create_map"><code>ComradeBase.create_map</code></a></li><li><a href="#ComradeBase.create_vismap"><code>ComradeBase.create_vismap</code></a></li><li><a href="#ComradeBase.domainpoints"><code>ComradeBase.domainpoints</code></a></li><li><a href="#ComradeBase.executor"><code>ComradeBase.executor</code></a></li><li><a href="#ComradeBase.fieldofview"><code>ComradeBase.fieldofview</code></a></li><li><a href="#ComradeBase.flux"><code>ComradeBase.flux</code></a></li><li><a href="#ComradeBase.header"><code>ComradeBase.header</code></a></li><li><a href="#ComradeBase.imagepixels"><code>ComradeBase.imagepixels</code></a></li><li><a href="#ComradeBase.imanalytic"><code>ComradeBase.imanalytic</code></a></li><li><a href="#ComradeBase.intensity_point"><code>ComradeBase.intensity_point</code></a></li><li><a href="#ComradeBase.intensitymap"><code>ComradeBase.intensitymap</code></a></li><li><a href="#ComradeBase.intensitymap!"><code>ComradeBase.intensitymap!</code></a></li><li><a href="#ComradeBase.intensitymap_analytic"><code>ComradeBase.intensitymap_analytic</code></a></li><li><a href="#ComradeBase.intensitymap_analytic!"><code>ComradeBase.intensitymap_analytic!</code></a></li><li><a href="#ComradeBase.intensitymap_numeric"><code>ComradeBase.intensitymap_numeric</code></a></li><li><a href="#ComradeBase.intensitymap_numeric!"><code>ComradeBase.intensitymap_numeric!</code></a></li><li><a href="#ComradeBase.ispolarized"><code>ComradeBase.ispolarized</code></a></li><li><a href="#ComradeBase.logclosure_amplitude"><code>ComradeBase.logclosure_amplitude</code></a></li><li><a href="#ComradeBase.logclosure_amplitudemap"><code>ComradeBase.logclosure_amplitudemap</code></a></li><li><a href="#ComradeBase.named_dims"><code>ComradeBase.named_dims</code></a></li><li><a href="#ComradeBase.phasecenter"><code>ComradeBase.phasecenter</code></a></li><li><a href="#ComradeBase.pixelsizes"><code>ComradeBase.pixelsizes</code></a></li><li><a href="#ComradeBase.radialextent"><code>ComradeBase.radialextent</code></a></li><li><a href="#ComradeBase.second_moment"><code>ComradeBase.second_moment</code></a></li><li><a href="#ComradeBase.stokes"><code>ComradeBase.stokes</code></a></li><li><a href="#ComradeBase.visanalytic"><code>ComradeBase.visanalytic</code></a></li><li><a href="#ComradeBase.visibility"><code>ComradeBase.visibility</code></a></li><li><a href="#ComradeBase.visibility_point"><code>ComradeBase.visibility_point</code></a></li><li><a href="#ComradeBase.visibilitymap"><code>ComradeBase.visibilitymap</code></a></li><li><a href="#ComradeBase.visibilitymap!"><code>ComradeBase.visibilitymap!</code></a></li><li><a href="#ComradeBase.visibilitymap_analytic"><code>ComradeBase.visibilitymap_analytic</code></a></li><li><a href="#ComradeBase.visibilitymap_analytic!"><code>ComradeBase.visibilitymap_analytic!</code></a></li><li><a href="#ComradeBase.visibilitymap_numeric"><code>ComradeBase.visibilitymap_numeric</code></a></li><li><a href="#ComradeBase.visibilitymap_numeric!"><code>ComradeBase.visibilitymap_numeric!</code></a></li><li><a href="#DimensionalData.Dimensions.dims"><code>DimensionalData.Dimensions.dims</code></a></li></ul><h2 id="Model-API" tabindex="-1">Model API <a class="header-anchor" href="#Model-API" aria-label="Permalink to &quot;Model API {#Model-API}&quot;">​</a></h2>',4)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"ComradeBase.flux",href:"#ComradeBase.flux"},[i("span",{class:"jlbinding"},"ComradeBase.flux")],-1)),s[1]||(s[1]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flux</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the flux of a intensity map</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L110-L114",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"ComradeBase.visibility",href:"#ComradeBase.visibility"},[i("span",{class:"jlbinding"},"ComradeBase.visibility")],-1)),s[5]||(s[5]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[7]||(s[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibility</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mimg, p)</span></span></code></pre></div><p>Computes the complex visibility of model <code>m</code> at coordinates <code>p</code>. <code>p</code> corresponds to the coordinates of the model. These need to have the properties <code>U</code>, <code>V</code> and sometimes <code>Ti</code> for time and <code>Fr</code> for frequency.</p><p><strong>Notes</strong></p><p>If you want to compute the visibilities at a large number of positions consider using the <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.visibilitymap"><code>visibilitymap</code></a>.</p><p><strong>Warn</strong></p><p>This is only defined for analytic models. If you want to compute the visibility for a single point for a non-analytic model, please use the <code>visibilitymap</code> function and create an <code>UnstructuredDomain</code> with a single point.</p>',6)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[6]||(s[6]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L74-L90",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",m,[i("summary",null,[s[8]||(s[8]=i("a",{id:"ComradeBase.visibilitymap",href:"#ComradeBase.visibilitymap"},[i("span",{class:"jlbinding"},"ComradeBase.visibilitymap")],-1)),s[9]||(s[9]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibilitymap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Computes the complex visibilities at the locations p.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[10]||(s[10]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L212-L216",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",u,[i("summary",null,[s[12]||(s[12]=i("a",{id:"ComradeBase.visibilitymap!",href:"#ComradeBase.visibilitymap!"},[i("span",{class:"jlbinding"},"ComradeBase.visibilitymap!")],-1)),s[13]||(s[13]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[15]||(s[15]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibilitymap!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Computes the complex visibilities <code>vis</code> in place at the locations p</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[14]||(s[14]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L219-L223",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",g,[i("summary",null,[s[16]||(s[16]=i("a",{id:"ComradeBase.intensitymap",href:"#ComradeBase.intensitymap"},[i("span",{class:"jlbinding"},"ComradeBase.intensitymap")],-1)),s[17]||(s[17]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[19]||(s[19]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensitymap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the intensity map of model. For the inplace version see <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensitymap!"><code>intensitymap!</code></a></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[18]||(s[18]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L164-L168",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",y,[i("summary",null,[s[20]||(s[20]=i("a",{id:"ComradeBase.intensitymap!",href:"#ComradeBase.intensitymap!"},[i("span",{class:"jlbinding"},"ComradeBase.intensitymap!")],-1)),s[21]||(s[21]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[23]||(s[23]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensitymap!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(buffer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractDimArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the intensity map of <code>model</code> by modifying the <code>buffer</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[22]||(s[22]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L157-L161",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",b,[i("summary",null,[s[24]||(s[24]=i("a",{id:"ComradeBase.allocate_vismap",href:"#ComradeBase.allocate_vismap"},[i("span",{class:"jlbinding"},"ComradeBase.allocate_vismap")],-1)),s[25]||(s[25]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[27]||(s[27]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">allocate_vismap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Allocate the default map specialized by the grid <code>g</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[26]||(s[26]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L39-L43",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",T,[i("summary",null,[s[28]||(s[28]=i("a",{id:"ComradeBase.allocate_imgmap",href:"#ComradeBase.allocate_imgmap"},[i("span",{class:"jlbinding"},"ComradeBase.allocate_imgmap")],-1)),s[29]||(s[29]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[31]||(s[31]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">allocate_imgmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Allocate the default map specialized by the grid <code>g</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[30]||(s[30]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L32-L36",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",C,[i("summary",null,[s[32]||(s[32]=i("a",{id:"ComradeBase.create_imgmap",href:"#ComradeBase.create_imgmap"},[i("span",{class:"jlbinding"},"ComradeBase.create_imgmap")],-1)),s[33]||(s[33]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[35]||(s[35]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create_imgmap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array, g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a map of values specialized by the grid <code>g</code> in the image domain. The default is to call <code>create_map</code> with the same arguments.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[34]||(s[34]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L24-L29",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",f,[i("summary",null,[s[36]||(s[36]=i("a",{id:"ComradeBase.create_vismap",href:"#ComradeBase.create_vismap"},[i("span",{class:"jlbinding"},"ComradeBase.create_vismap")],-1)),s[37]||(s[37]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[39]||(s[39]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create_vismap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array, g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a map of values specialized by the grid <code>g</code> in the visibility domain. The default is to call <code>create_map</code> with the same arguments.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[38]||(s[38]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L16-L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",E,[i("summary",null,[s[40]||(s[40]=i("a",{id:"ComradeBase.amplitude-Tuple{Any, Any}",href:"#ComradeBase.amplitude-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"ComradeBase.amplitude")],-1)),s[41]||(s[41]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[43]||(s[43]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">amplitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, p)</span></span></code></pre></div><p>Computes the visibility amplitude of model <code>m</code> at the coordinate <code>p</code>. The coordinate <code>p</code> is expected to have the properties <code>U</code>, <code>V</code>, and sometimes <code>Ti</code> and <code>Fr</code>.</p><p>If you want to compute the amplitudemap at a large number of positions consider using the <code>amplitudemap</code> function.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[42]||(s[42]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L99-L108",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",_,[i("summary",null,[s[44]||(s[44]=i("a",{id:"ComradeBase.amplitudemap",href:"#ComradeBase.amplitudemap"},[i("span",{class:"jlbinding"},"ComradeBase.amplitudemap")],-1)),s[45]||(s[45]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[47]||(s[47]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">amplitudemap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Computes the visibility amplitudemap of the model <code>m</code> at the coordinates <code>p</code>. The coordinates <code>p</code> are expected to have the properties <code>U</code>, <code>V</code>, and sometimes <code>Ti</code> and <code>Fr</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[46]||(s[46]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L161-L167",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",F,[i("summary",null,[s[48]||(s[48]=i("a",{id:"ComradeBase.bispectrum",href:"#ComradeBase.bispectrum"},[i("span",{class:"jlbinding"},"ComradeBase.bispectrum")],-1)),s[49]||(s[49]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[51]||(s[51]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bispectrum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, p1, p2, p3)</span></span></code></pre></div><p>Computes the complex bispectrum of model <code>m</code> at the uv-triangle p1 -&gt; p2 -&gt; p3</p><p>If you want to compute the bispectrum over a number of triangles consider using the <code>bispectrummap</code> function.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[50]||(s[50]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L113-L121",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",j,[i("summary",null,[s[52]||(s[52]=i("a",{id:"ComradeBase.bispectrummap",href:"#ComradeBase.bispectrummap"},[i("span",{class:"jlbinding"},"ComradeBase.bispectrummap")],-1)),s[53]||(s[53]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[55]||(s[55]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">bispectrummap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m, p1, p2, p3)</span></span></code></pre></div><p>Computes the closure phases of the model <code>m</code> at the triangles p1, p2, p3, where <code>pi</code> are coordinates.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[54]||(s[54]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L185-L190",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",B,[i("summary",null,[s[56]||(s[56]=i("a",{id:"ComradeBase.closure_phase",href:"#ComradeBase.closure_phase"},[i("span",{class:"jlbinding"},"ComradeBase.closure_phase")],-1)),s[57]||(s[57]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[59]||(s[59]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closure_phase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, p1, p2, p3, p4)</span></span></code></pre></div><p>Computes the closure phase of model <code>m</code> at the uv-triangle u1,v1 -&gt; u2,v2 -&gt; u3,v3</p><p>If you want to compute closure phases over a number of triangles consider using the <code>closure_phasemap</code> function.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[58]||(s[58]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L126-L134",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",v,[i("summary",null,[s[60]||(s[60]=i("a",{id:"ComradeBase.closure_phasemap",href:"#ComradeBase.closure_phasemap"},[i("span",{class:"jlbinding"},"ComradeBase.closure_phasemap")],-1)),s[61]||(s[61]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[63]||(s[63]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">closure_phasemap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               p1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               p2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               p3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               )</span></span></code></pre></div><p>Computes the closure phases of the model <code>m</code> at the triangles p1, p2, p3, where <code>pi</code> are coordinates.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[62]||(s[62]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L226-L235",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Q,[i("summary",null,[s[64]||(s[64]=i("a",{id:"ComradeBase.logclosure_amplitude",href:"#ComradeBase.logclosure_amplitude"},[i("span",{class:"jlbinding"},"ComradeBase.logclosure_amplitude")],-1)),s[65]||(s[65]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[69]||(s[69]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logclosure_amplitude</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, p1, p2, p3, p4)</span></span></code></pre></div><p>Computes the log-closure amplitude of model <code>m</code> at the uv-quadrangle u1,v1 -&gt; u2,v2 -&gt; u3,v3 -&gt; u4,v4 using the formula</p>',2)),i("mjx-container",A,[(d(),o("svg",x,s[66]||(s[66]=[l('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1037.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2093.6,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" style="stroke-width:3;"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)" style="stroke-width:3;"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3371.6,0)"><path data-c="2061" d="" style="stroke-width:3;"></path></g><g data-mml-node="mrow" transform="translate(3538.2,0)"><g data-mml-node="mo"><svg width="278" height="2420" y="-960" x="27.5" viewBox="0 -299.8 278 2420"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1,3.634)" style="stroke-width:3;"></path></svg></g><g data-mml-node="mfrac" transform="translate(333,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(769,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1158,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1730,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2230,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2674.7,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(3159.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3659.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4048.7,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4817.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5206.7,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5778.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6278.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6723.3,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(7208.3,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7708.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mrow" transform="translate(220,-710)"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(769,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1158,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(1730,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2230,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2674.7,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(3159.7,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3659.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4048.7,0)"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4817.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5206.7,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(5778.7,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(6278.7,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6723.3,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(7208.3,0)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(7708.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g><rect width="8297.3" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(8870.3,0)"><svg width="278" height="2420" y="-960" x="27.5" viewBox="0 -299.8 278 2420"><path data-c="2223" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z" transform="scale(1,3.634)" style="stroke-width:3;"></path></svg></g></g></g></g>',1)]))),s[67]||(s[67]=i("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[i("mi",null,"C"),i("mo",null,"="),i("mi",null,"log"),i("mo",{"data-mjx-texclass":"NONE"},"⁡"),i("mrow",{"data-mjx-texclass":"INNER"},[i("mo",{"data-mjx-texclass":"OPEN"},"|"),i("mfrac",null,[i("mrow",null,[i("mi",null,"V"),i("mo",{stretchy:"false"},"("),i("mi",null,"u"),i("mn",null,"1"),i("mo",null,","),i("mi",null,"v"),i("mn",null,"1"),i("mo",{stretchy:"false"},")"),i("mi",null,"V"),i("mo",{stretchy:"false"},"("),i("mi",null,"u"),i("mn",null,"2"),i("mo",null,","),i("mi",null,"v"),i("mn",null,"2"),i("mo",{stretchy:"false"},")")]),i("mrow",null,[i("mi",null,"V"),i("mo",{stretchy:"false"},"("),i("mi",null,"u"),i("mn",null,"3"),i("mo",null,","),i("mi",null,"v"),i("mn",null,"3"),i("mo",{stretchy:"false"},")"),i("mi",null,"V"),i("mo",{stretchy:"false"},"("),i("mi",null,"u"),i("mn",null,"4"),i("mo",null,","),i("mi",null,"v"),i("mn",null,"4"),i("mo",{stretchy:"false"},")")])]),i("mo",{"data-mjx-texclass":"CLOSE"},"|")])])],-1))]),s[70]||(s[70]=i("p",null,[t("If you want to compute log closure amplitudemap over a number of triangles consider using the "),i("code",null,"logclosure_amplitudemap"),t(" function.")],-1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[68]||(s[68]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L139-L151",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",D,[i("summary",null,[s[71]||(s[71]=i("a",{id:"ComradeBase.logclosure_amplitudemap",href:"#ComradeBase.logclosure_amplitudemap"},[i("span",{class:"jlbinding"},"ComradeBase.logclosure_amplitudemap")],-1)),s[72]||(s[72]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[74]||(s[74]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">logclosure_amplitudemap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      p1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      p2,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      p3,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                      p4</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                     )</span></span></code></pre></div><p>Computes the log closure amplitudemap of the model <code>m</code> at the quadrangles p1, p2, p3, p4.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[73]||(s[73]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/visibilities.jl#L264-L274",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[262]||(s[262]=i("h3",{id:"Model-Interface",tabindex:"-1"},[t("Model Interface "),i("a",{class:"header-anchor",href:"#Model-Interface","aria-label":'Permalink to "Model Interface {#Model-Interface}"'},"​")],-1)),i("details",I,[i("summary",null,[s[75]||(s[75]=i("a",{id:"ComradeBase.AbstractModel",href:"#ComradeBase.AbstractModel"},[i("span",{class:"jlbinding"},"ComradeBase.AbstractModel")],-1)),s[76]||(s[76]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[78]||(s[78]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">AbstractModel</span></span></code></pre></div><p>The Comrade abstract model type. To instantiate your own model type you should subtybe from this model. Additionally you need to implement the following methods to satify the interface:</p><p><strong>Mandatory Methods</strong></p><ul><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.visanalytic"><code>visanalytic</code></a>: defines whether the model visibilities can be computed analytically. If yes then this should return <code>IsAnalytic()</code> and the user <em>must</em> to define <code>visibility_point</code>. If not analytic then <code>visanalytic</code> should return <code>NotAnalytic()</code>.</p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.imanalytic"><code>imanalytic</code></a>: defines whether the model intensities can be computed pointwise. If yes then this should return <code>IsAnalytic()</code> and the user <em>must</em> to define <code>intensity_point</code>. If not analytic then <code>imanalytic</code> should return <code>NotAnalytic()</code>.</p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.radialextent"><code>radialextent</code></a>: Provides a estimate of the radial extent of the model in the image domain. This is used for estimating the size of the image, and for plotting.</p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.flux"><code>flux</code></a>: Returns the total flux of the model.</p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensity_point"><code>intensity_point</code></a>: Defines how to compute model intensities pointwise. Note this is must be defined if <code>imanalytic(::Type{YourModel})==IsAnalytic()</code>.</p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.visibility_point"><code>visibility_point</code></a>: Defines how to compute model visibilties pointwise. Note this is must be defined if <code>visanalytic(::Type{YourModel})==IsAnalytic()</code>.</p></li></ul><p><strong>Optional Methods:</strong></p><ul><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.ispolarized"><code>ispolarized</code></a>: Specified whether a model is intrinsically polarized (returns <code>IsPolarized()</code>) or is not (returns <code>NotPolarized()</code>), by default a model is <code>NotPolarized()</code></p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.visibilitymap_analytic"><code>visibilitymap_analytic</code></a>: Vectorized version of <code>visibility_point</code> for models where <code>visanalytic</code> returns <code>IsAnalytic()</code></p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.visibilitymap_numeric"><code>visibilitymap_numeric</code></a>: Vectorized version of <code>visibility_point</code> for models where <code>visanalytic</code> returns <code>NotAnalytic()</code> typically these are numerical FT&#39;s</p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensitymap_analytic"><code>intensitymap_analytic</code></a>: Computes the entire image for models where <code>imanalytic</code> returns <code>IsAnalytic()</code></p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensitymap_numeric"><code>intensitymap_numeric</code></a>: Computes the entire image for models where <code>imanalytic</code> returns <code>NotAnalytic()</code></p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensitymap_analytic!"><code>intensitymap_analytic!</code></a>: Inplace version of <code>intensitymap</code></p></li><li><p><a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensitymap_numeric!"><code>intensitymap_numeric!</code></a>: Inplace version of <code>intensitymap</code></p></li></ul>',6)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[77]||(s[77]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L2-L33",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",S,[i("summary",null,[s[79]||(s[79]=i("a",{id:"ComradeBase.AbstractPolarizedModel",href:"#ComradeBase.AbstractPolarizedModel"},[i("span",{class:"jlbinding"},"ComradeBase.AbstractPolarizedModel")],-1)),s[80]||(s[80]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[82]||(s[82]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">abstract type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AbstractPolarizedModel </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ComradeBase.AbstractModel</span></span></code></pre></div><p>A generic polarized model. To implement the use needs to follow the <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.AbstractModel"><code>AbstractModel</code></a> implementation instructions. In addtion there is an optional method <code>stokes(model, p::Symbol)</code> which extracts the specific stokes parameter of the model. The default that the different stokes parameters are stored as fields of the model. To overwrite this behavior overload the function.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[81]||(s[81]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L54-L62",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",V,[i("summary",null,[s[83]||(s[83]=i("a",{id:"ComradeBase.visanalytic",href:"#ComradeBase.visanalytic"},[i("span",{class:"jlbinding"},"ComradeBase.visanalytic")],-1)),s[84]||(s[84]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[86]||(s[86]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visanalytic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:AbstractModel}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determines whether the model is pointwise analytic in Fourier domain, i.e. we can evaluate its fourier transform at an arbritrary point.</p><p>If <code>IsAnalytic()</code> then it will try to call <code>visibility_point</code> to calculate the complex visibilities. Otherwise it fallback to using the FFT that works for all models that can compute an image.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[85]||(s[85]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L102-L111",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",L,[i("summary",null,[s[87]||(s[87]=i("a",{id:"ComradeBase.imanalytic",href:"#ComradeBase.imanalytic"},[i("span",{class:"jlbinding"},"ComradeBase.imanalytic")],-1)),s[88]||(s[88]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[90]||(s[90]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">imanalytic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:AbstractModel}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Determines whether the model is pointwise analytic in the image domain, i.e. we can evaluate its intensity at an arbritrary point.</p><p>If <code>IsAnalytic()</code> then it will try to call <code>intensity_point</code> to calculate the intensity.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[89]||(s[89]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L114-L121",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",P,[i("summary",null,[s[91]||(s[91]=i("a",{id:"ComradeBase.ispolarized",href:"#ComradeBase.ispolarized"},[i("span",{class:"jlbinding"},"ComradeBase.ispolarized")],-1)),s[92]||(s[92]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[94]||(s[94]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ispolarized</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Trait function that defines whether a model is polarized or not.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[93]||(s[93]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L47-L51",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",w,[i("summary",null,[s[95]||(s[95]=i("a",{id:"ComradeBase.radialextent",href:"#ComradeBase.radialextent"},[i("span",{class:"jlbinding"},"ComradeBase.radialextent")],-1)),s[96]||(s[96]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[98]||(s[98]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">radialextent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Provides an estimate of the radial size/extent of the <code>model</code>. This is used internally to estimate image size when plotting and using <code>modelimage</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[97]||(s[97]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L204-L209",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",M,[i("summary",null,[s[99]||(s[99]=i("a",{id:"ComradeBase.DensityAnalytic",href:"#ComradeBase.DensityAnalytic"},[i("span",{class:"jlbinding"},"ComradeBase.DensityAnalytic")],-1)),s[100]||(s[100]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[102]||(s[102]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DensityAnalytic</span></span></code></pre></div><p>Internal type for specifying the nature of the model functions. Whether they can be easily evaluated pointwise analytic. This is an internal type that may change.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[101]||(s[101]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L73-L79",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",H,[i("summary",null,[s[103]||(s[103]=i("a",{id:"ComradeBase.IsAnalytic",href:"#ComradeBase.IsAnalytic"},[i("span",{class:"jlbinding"},"ComradeBase.IsAnalytic")],-1)),s[104]||(s[104]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[106]||(s[106]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IsAnalytic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ComradeBase.DensityAnalytic</span></span></code></pre></div><p>Defines a trait that a states that a model is analytic. This is usually used with an abstract model where we use it to specify whether a model has a analytic fourier transform and/or image.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[105]||(s[105]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L82-L89",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",N,[i("summary",null,[s[107]||(s[107]=i("a",{id:"ComradeBase.NotAnalytic",href:"#ComradeBase.NotAnalytic"},[i("span",{class:"jlbinding"},"ComradeBase.NotAnalytic")],-1)),s[108]||(s[108]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[110]||(s[110]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NotAnalytic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ComradeBase.DensityAnalytic</span></span></code></pre></div><p>Defines a trait that a states that a model is analytic. This is usually used with an abstract model where we use it to specify whether a model has does not have a easy analytic fourier transform and/or intensity function.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[109]||(s[109]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L92-L99",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",R,[i("summary",null,[s[111]||(s[111]=i("a",{id:"ComradeBase.visibility_point",href:"#ComradeBase.visibility_point"},[i("span",{class:"jlbinding"},"ComradeBase.visibility_point")],-1)),s[112]||(s[112]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[114]||(s[114]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibility_point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Function that computes the pointwise visibility. This must be implemented in the model interface if <code>visanalytic(::Type{MyModel}) == IsAnalytic()</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[113]||(s[113]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L139-L145",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",O,[i("summary",null,[s[115]||(s[115]=i("a",{id:"ComradeBase.visibilitymap_analytic",href:"#ComradeBase.visibilitymap_analytic"},[i("span",{class:"jlbinding"},"ComradeBase.visibilitymap_analytic")],-1)),s[116]||(s[116]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[118]||(s[118]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibilties_analytic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, p)</span></span></code></pre></div><p>Computes the visibilties of a <code>model</code> using using the analytic visibility expression given by <code>visibility_point</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[117]||(s[117]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L254-L259",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",z,[i("summary",null,[s[119]||(s[119]=i("a",{id:"ComradeBase.visibilitymap_analytic!",href:"#ComradeBase.visibilitymap_analytic!"},[i("span",{class:"jlbinding"},"ComradeBase.visibilitymap_analytic!")],-1)),s[120]||(s[120]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[122]||(s[122]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibilties_analytic!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis, model)</span></span></code></pre></div><p>Computes the visibilties of a <code>model</code> in-place, using using the analytic visibility expression given by <code>visibility_point</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[121]||(s[121]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L270-L275",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Z,[i("summary",null,[s[123]||(s[123]=i("a",{id:"ComradeBase.visibilitymap_numeric",href:"#ComradeBase.visibilitymap_numeric"},[i("span",{class:"jlbinding"},"ComradeBase.visibilitymap_numeric")],-1)),s[124]||(s[124]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[126]||(s[126]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibilties_numeric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, p)</span></span></code></pre></div><p>Computes the visibilties of a <code>model</code> using a numerical fourier transform. Note that none of these are implemented in <code>ComradeBase</code>. For implementations please see <code>Comrade</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[125]||(s[125]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L246-L251",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",U,[i("summary",null,[s[127]||(s[127]=i("a",{id:"ComradeBase.visibilitymap_numeric!",href:"#ComradeBase.visibilitymap_numeric!"},[i("span",{class:"jlbinding"},"ComradeBase.visibilitymap_numeric!")],-1)),s[128]||(s[128]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[130]||(s[130]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">visibilties_numeric!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(vis, model)</span></span></code></pre></div><p>Computes the visibilties of a <code>model</code> in-place using a numerical fourier transform. Note that none of these are implemented in <code>ComradeBase</code>. For implementations please see <code>Comrade</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[129]||(s[129]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L262-L267",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",G,[i("summary",null,[s[131]||(s[131]=i("a",{id:"ComradeBase.intensity_point",href:"#ComradeBase.intensity_point"},[i("span",{class:"jlbinding"},"ComradeBase.intensity_point")],-1)),s[132]||(s[132]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[134]||(s[134]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensity_point</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Function that computes the pointwise intensity if the model has the trait in the image domain <code>IsAnalytic()</code>. Otherwise it will use construct the image in visibility space and invert it.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[133]||(s[133]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L148-L154",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",q,[i("summary",null,[s[135]||(s[135]=i("a",{id:"ComradeBase.intensitymap_analytic",href:"#ComradeBase.intensitymap_analytic"},[i("span",{class:"jlbinding"},"ComradeBase.intensitymap_analytic")],-1)),s[136]||(s[136]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[138]||(s[138]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensitymap_analytic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the <code>IntensityMap</code> of a model <code>m</code> using the image dimensions <code>p</code> by broadcasting over the analytic <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensity_point"><code>intensity_point</code></a> method.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[137]||(s[137]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L180-L185",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Y,[i("summary",null,[s[139]||(s[139]=i("a",{id:"ComradeBase.intensitymap_analytic!",href:"#ComradeBase.intensitymap_analytic!"},[i("span",{class:"jlbinding"},"ComradeBase.intensitymap_analytic!")],-1)),s[140]||(s[140]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[142]||(s[142]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensitymap_analytic!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Updates the <code>img</code> using the model <code>m</code> by broadcasting over the analytic <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.intensity_point"><code>intensity_point</code></a> method.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[141]||(s[141]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L197-L201",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",X,[i("summary",null,[s[143]||(s[143]=i("a",{id:"ComradeBase.intensitymap_numeric",href:"#ComradeBase.intensitymap_numeric"},[i("span",{class:"jlbinding"},"ComradeBase.intensitymap_numeric")],-1)),s[144]||(s[144]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[146]||(s[146]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensitymap_numeric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the <code>IntensityMap</code> of a model <code>m</code> at the image positions <code>p</code> using a numerical method. This has to be specified uniquely for every model <code>m</code> if <code>imanalytic(typeof(m)) === NotAnalytic()</code>. See <code>Comrade.jl</code> for example implementations.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[145]||(s[145]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L171-L177",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",J,[i("summary",null,[s[147]||(s[147]=i("a",{id:"ComradeBase.intensitymap_numeric!",href:"#ComradeBase.intensitymap_numeric!"},[i("span",{class:"jlbinding"},"ComradeBase.intensitymap_numeric!")],-1)),s[148]||(s[148]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[150]||(s[150]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">intensitymap_numeric!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Updates the <code>img</code> using the model <code>m</code> using a numerical method. This has to be specified uniquely for every model <code>m</code> if <code>imanalytic(typeof(m)) === NotAnalytic()</code>. See <code>Comrade.jl</code> for example implementations.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[149]||(s[149]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L188-L194",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[263]||(s[263]=i("h3",{id:"Image-Domain",tabindex:"-1"},[t("Image Domain "),i("a",{class:"header-anchor",href:"#Image-Domain","aria-label":'Permalink to "Image Domain {#Image-Domain}"'},"​")],-1)),i("details",W,[i("summary",null,[s[151]||(s[151]=i("a",{id:"ComradeBase.imagepixels",href:"#ComradeBase.imagepixels"},[i("span",{class:"jlbinding"},"ComradeBase.imagepixels")],-1)),s[152]||(s[152]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[154]||(s[154]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">imagepixels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(fovx, fovy, nx, ny, x0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, y0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; posang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Construct a grid of pixels with a field of view <code>fovx</code> and <code>fovy</code> and <code>nx</code> and <code>ny</code> pixels. This points are the pixel centers and the field of view goes from the edge of the first pixel to the edge of the last pixel. The <code>x0</code>, <code>y0</code> offsets shift the image origin over by (<code>x0</code>, <code>y0</code>) in the image plane.</p><p><strong>Arguments:</strong></p><ul><li><p><code>fovx::Real</code>: The field of view in the x-direction</p></li><li><p><code>fovy::Real</code>: The field of view in the y-direction</p></li><li><p><code>nx::Integer</code>: The number of pixels in the x-direction</p></li><li><p><code>ny::Integer</code>: The number of pixels in the y-direction</p></li></ul><p><strong>Keyword Arguments:</strong></p><ul><li><p><code>x0::Real=0</code>: The x-offset of the image</p></li><li><p><code>y0::Real=0</code>: The y-offset of the image</p></li><li><p><code>posang::Real=0</code>: The position angle of the grid, relative to RA=0 axis.</p></li><li><p><code>executor=Serial()</code>: The executor to use for the grid, default is serial execution</p></li><li><p><code>header=NoHeader()</code>: The header to use for the grid</p></li></ul>',6)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[153]||(s[153]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L62-L82",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",$,[i("summary",null,[s[155]||(s[155]=i("a",{id:"ComradeBase.RectiGrid",href:"#ComradeBase.RectiGrid"},[i("span",{class:"jlbinding"},"ComradeBase.RectiGrid")],-1)),s[156]||(s[156]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[158]||(s[158]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple{Na}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComradeBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), posang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NTuple{N, &lt;:DimensionalData.Dimension}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComradeBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), posang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a rectilinear grid of pixels with the dimensions <code>dims</code>. The convention is that the first two dimension are the spatial dimensions <code>X/U</code> and <code>Y/V</code>. The remaining dimensions can be anything, for example:</p><ul><li><p>(:X, :Y, :Ti, :Fr)</p></li><li><p>(:X, :Y, :Fr, :Ti)</p></li><li><p>(:X, :Y) # spatial only</p></li></ul><p>where <code>X/U,Y/V</code> are the RA and DEC spatial dimensions in image/visibility space respectively, <code>Ti</code> is the time dimension and <code>Fr</code> is the frequency dimension.</p><p>Note that the majority of the time users should just call <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.imagepixels"><code>imagepixels</code></a> to create a spatial grid.</p><p><strong>Optional Arguments</strong></p><ul><li><p><code>executor</code>: specifies how different models are executed. The default is <code>Serial</code> which mean serial CPU computations. For threaded computations use <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.ThreadsEx"><code>ThreadsEx()</code></a> or load <code>OhMyThreads.jl</code> to uses their schedulers.</p></li><li><p><code>header</code>: specified underlying header information for the grid. This is used to store information about the image such as the source, RA and DEC, MJD.</p></li><li><p><code>posang</code>: specifies the position angle of the grid, relative to RA=0 axis. Note that when <code>posang != 0</code> the X and Y coordinate are relative to the rotated grid and not the on sky RA and DEC orientation. To see the true on sky points you can access them by calling <code>domainpoints(grid)</code>.</p></li></ul><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>The <code>posang</code> argument and the overall rotation of the grid is currently experimental and and may change abruptly in the future even on minor releases.</p></div><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ti</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">230</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">345</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])); executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ThreadsEx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dims </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Ti </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.75</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], Fr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">230</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">345</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]); executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ThreadsEx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()))</span></span></code></pre></div>`,10)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[157]||(s[157]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/rectigrid.jl#L64-L103",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",K,[i("summary",null,[s[159]||(s[159]=i("a",{id:"ComradeBase.UnstructuredDomain",href:"#ComradeBase.UnstructuredDomain"},[i("span",{class:"jlbinding"},"ComradeBase.UnstructuredDomain")],-1)),s[160]||(s[160]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[162]||(s[162]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnstructuredDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; executor</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ComradeBase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NoHeader)</span></span></code></pre></div><p>Builds an unstructured grid (really a vector of points) from the dimensions <code>dims</code>. The <code>executor</code> is used controls how the grid is computed when calling <code>visibilitymap</code> or <code>intensitymap</code>. The default is <code>Serial</code> which mean regular CPU computations. For threaded execution use <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.ThreadsEx"><code>ThreadsEx()</code></a> or load <code>OhMyThreads.jl</code> to uses their schedulers.</p><p>Note that unlike <code>RectiGrid</code> which assigns dimensions to the grid points, <code>UnstructuredDomain</code> does not. This is becuase the grid is unstructured the points are a cloud in a space</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[161]||(s[161]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/unstructured/domain.jl#L16-L26",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ss,[i("summary",null,[s[163]||(s[163]=i("a",{id:"DimensionalData.Dimensions.dims",href:"#DimensionalData.Dimensions.dims"},[i("span",{class:"jlbinding"},"DimensionalData.Dimensions.dims")],-1)),s[164]||(s[164]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[166]||(s[166]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dims</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a tuple containing the dimensions of <code>g</code>. For a named version see <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.named_dims"><code>ComradeBase.named_dims</code></a></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[165]||(s[165]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L96-L100",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",is,[i("summary",null,[s[167]||(s[167]=i("a",{id:"ComradeBase.named_dims",href:"#ComradeBase.named_dims"},[i("span",{class:"jlbinding"},"ComradeBase.named_dims")],-1)),s[168]||(s[168]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[170]||(s[170]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">named_dims</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a named tuple containing the dimensions of <code>g</code>. For a unnamed version see <a href="/Comrade.jl/v0.11.9/base_api#DimensionalData.Dimensions.dims"><code>dims</code></a></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[169]||(s[169]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L105-L109",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",es,[i("summary",null,[s[171]||(s[171]=i("a",{id:"ComradeBase.axisdims",href:"#ComradeBase.axisdims"},[i("span",{class:"jlbinding"},"ComradeBase.axisdims")],-1)),s[172]||(s[172]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[174]||(s[174]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axisdims</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">axisdims</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the keys of the <code>IntensityMap</code> as the actual internal <code>AbstractRectiGrid</code> object. Optionall the user can ask for a specific dimension with <code>p</code></p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[173]||(s[173]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/dim_image.jl#L131-L137",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",as,[i("summary",null,[s[175]||(s[175]=i("a",{id:"ComradeBase.domainpoints",href:"#ComradeBase.domainpoints"},[i("span",{class:"jlbinding"},"ComradeBase.domainpoints")],-1)),s[176]||(s[176]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[178]||(s[178]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">domainpoints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a grid iterator that can be used to iterate through different points. All grid methods must implement this method.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[177]||(s[177]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L74-L79",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ts,[i("summary",null,[s[179]||(s[179]=i("a",{id:"ComradeBase.fieldofview",href:"#ComradeBase.fieldofview"},[i("span",{class:"jlbinding"},"ComradeBase.fieldofview")],-1)),s[180]||(s[180]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[182]||(s[182]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fieldofview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fieldofview</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a named tuple with the field of view of the image.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[181]||(s[181]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L98-L103",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ls,[i("summary",null,[s[183]||(s[183]=i("a",{id:"ComradeBase.pixelsizes",href:"#ComradeBase.pixelsizes"},[i("span",{class:"jlbinding"},"ComradeBase.pixelsizes")],-1)),s[184]||(s[184]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[186]||(s[186]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pixelsizes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pixelsizes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns a named tuple with the spatial pixel sizes of the image.</p>`,2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[185]||(s[185]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L202-L207",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ns,[i("summary",null,[s[187]||(s[187]=i("a",{id:"ComradeBase.phasecenter",href:"#ComradeBase.phasecenter"},[i("span",{class:"jlbinding"},"ComradeBase.phasecenter")],-1)),s[188]||(s[188]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[190]||(s[190]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">phasecenter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the phase center of an intensity map. Note this is the pixels that is in the middle of the image.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[189]||(s[189]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L46-L51",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",os,[i("summary",null,[s[191]||(s[191]=i("a",{id:"ComradeBase.executor",href:"#ComradeBase.executor"},[i("span",{class:"jlbinding"},"ComradeBase.executor")],-1)),s[192]||(s[192]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[194]||(s[194]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the executor used to compute the intensitymap or visibilitymap</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[193]||(s[193]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L87-L91",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ds,[i("summary",null,[s[195]||(s[195]=i("a",{id:"ComradeBase.Serial",href:"#ComradeBase.Serial"},[i("span",{class:"jlbinding"},"ComradeBase.Serial")],-1)),s[196]||(s[196]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[198]||(s[198]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Serial</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>Uses serial execution when computing the intensitymap or visibilitymap</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[197]||(s[197]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/executors.jl#L3-L7",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ps,[i("summary",null,[s[199]||(s[199]=i("a",{id:"ComradeBase.ThreadsEx",href:"#ComradeBase.ThreadsEx"},[i("span",{class:"jlbinding"},"ComradeBase.ThreadsEx")],-1)),s[200]||(s[200]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[202]||(s[202]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ThreadsEx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(;scheduler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :dynamic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Uses Julia&#39;s Threads @threads macro when computing the intensitymap or visibilitymap. You can choose from Julia&#39;s various schedulers by passing the scheduler as a parameter. The default is :dynamic, but it isn&#39;t considered part of the stable API and may change at any moment.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[201]||(s[201]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/executors.jl#L10-L17",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",rs,[i("summary",null,[s[203]||(s[203]=i("a",{id:"ComradeBase.header",href:"#ComradeBase.header"},[i("span",{class:"jlbinding"},"ComradeBase.header")],-1)),s[204]||(s[204]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[207]||(s[207]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Returns the headerinformation of the dimensions <code>g</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[205]||(s[205]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L114-L118",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[208]||(s[208]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(img</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Retrieves the header of an IntensityMap</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[206]||(s[206]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/dim_image.jl#L143-L147",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",hs,[i("summary",null,[s[209]||(s[209]=i("a",{id:"ComradeBase.NoHeader",href:"#ComradeBase.NoHeader"},[i("span",{class:"jlbinding"},"ComradeBase.NoHeader")],-1)),s[210]||(s[210]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[212]||(s[212]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">NoHeader</span></span></code></pre></div>',1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[211]||(s[211]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L180-L184",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ks,[i("summary",null,[s[213]||(s[213]=i("a",{id:"ComradeBase.MinimalHeader",href:"#ComradeBase.MinimalHeader"},[i("span",{class:"jlbinding"},"ComradeBase.MinimalHeader")],-1)),s[214]||(s[214]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[216]||(s[216]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">MinimalHeader{T}</span></span></code></pre></div><p>A minimal header type for ancillary image information.</p><p><strong>Fields</strong></p><ul><li><p><code>source</code>: Common source name</p></li><li><p><code>ra</code>: Right ascension of the image in degrees (J2000)</p></li><li><p><code>dec</code>: Declination of the image in degrees (J2000)</p></li><li><p><code>mjd</code>: Modified Julian Date in days</p></li><li><p><code>frequency</code>: Frequency of the image in Hz</p></li></ul>',4)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[215]||(s[215]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L144-L151",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[264]||(s[264]=i("h3",{id:"Image-Types",tabindex:"-1"},[t("Image Types "),i("a",{class:"header-anchor",href:"#Image-Types","aria-label":'Permalink to "Image Types {#Image-Types}"'},"​")],-1)),i("details",cs,[i("summary",null,[s[217]||(s[217]=i("a",{id:"ComradeBase.IntensityMap",href:"#ComradeBase.IntensityMap"},[i("span",{class:"jlbinding"},"ComradeBase.IntensityMap")],-1)),s[218]||(s[218]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[220]||(s[220]=l(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IntensityMap{T, N, D, G</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">(ComradeBase.AbstractRectiGrid{D})</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, A</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{T, N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Na} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractDimArray{T, N, D, A&lt;:AbstractArray{T, N}}</span></span></code></pre></div><p>This type is the basic array type for all images and models that obey the <code>ComradeBase</code> interface. The type is a subtype of <code>DimensionalData.AbstractDimArray</code> however, we make a few changes to support the Comrade API.</p><ol><li><p>The dimensions should be specified by an <code>AbstractRectiGrid</code> interface. Usually users just need the <a href="/Comrade.jl/v0.11.9/base_api#ComradeBase.RectiGrid"><code>RectiGrid</code></a> grid, for rectilinear grids.</p></li><li><p>There are two ways to access the dimensions of the array. <code>dims(img)</code> will return the usual <code>DimArray</code> dimensions, i.e. a <code>Tuple{DimensionalData.Dim, ...}</code>. The other way to access the array dimensions is using the <code>getproperty</code>, e.g., <code>img.X</code> will return the RA/X grid locations but stripped of the usual <code>DimensionalData.Dimension</code> material. This <code>getproperty</code> behavior is <em>NOT CONSIDERED</em>* part of the stable API and may be changed in the future.</p></li><li><p>Metadata is stored in the <code>AbstractRectiGrid</code> type through the <code>header</code> property and can be accessed through <code>metadata</code> or <code>header</code></p></li></ol><p>The most common way to create a <code>IntensityMap</code> is to use the function definitions</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> imagepixels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X; Y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Y</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, g)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, (;X, Y); header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(g))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img2</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NoHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span></code></pre></div><p>Broadcasting, map, and reductions should all just obey the <code>DimensionalData</code> interface.</p>`,6)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[219]||(s[219]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/dim_image.jl#L12-L43",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ms,[i("summary",null,[s[221]||(s[221]=i("a",{id:"ComradeBase.IntensityMap-Tuple{AbstractArray, ComradeBase.AbstractRectiGrid}",href:"#ComradeBase.IntensityMap-Tuple{AbstractArray, ComradeBase.AbstractRectiGrid}"},[i("span",{class:"jlbinding"},"ComradeBase.IntensityMap")],-1)),s[222]||(s[222]=t()),a(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[224]||(s[224]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractRectiGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; refdims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p>Creates a IntensityMap with the pixel fluxes <code>data</code> on the grid <code>g</code>. Optionally, you can specify a set of reference dimensions <code>refdims</code> as a tuple and a name for array <code>name</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[223]||(s[223]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/dim_image.jl#L103-L108",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",us,[i("summary",null,[s[225]||(s[225]=i("a",{id:"ComradeBase.UnstructuredMap",href:"#ComradeBase.UnstructuredMap"},[i("span",{class:"jlbinding"},"ComradeBase.UnstructuredMap")],-1)),s[226]||(s[226]=t()),a(e,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[228]||(s[228]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnstructuredMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, dims</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UnstructuredDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>A map that is defined on an unstructured domain. This is typically just a vector of values. The vector of locations of the visibilities are stored in <code>dims</code>. Otherwise this behaves very similarly to <code>IntensityMap</code>, except that is isn&#39;t a grid.</p><p>For instance the locations of the visibilities can be accessed with <code>axisdims</code>, as well as the usual <code>getproperty</code> and <code>propertynames</code> functions. Like with <code>IntensityMap</code> during execution the <code>executor</code> is used to determine the execution context.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[227]||(s[227]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/unstructured/map.jl#L3-L13",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",gs,[i("summary",null,[s[229]||(s[229]=i("a",{id:"ComradeBase.baseimage",href:"#ComradeBase.baseimage"},[i("span",{class:"jlbinding"},"ComradeBase.baseimage")],-1)),s[230]||(s[230]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[232]||(s[232]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Returns the base image of a intensity map type object</span></span></code></pre></div>',1)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[231]||(s[231]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L291-L293",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",ys,[i("summary",null,[s[233]||(s[233]=i("a",{id:"ComradeBase.centroid",href:"#ComradeBase.centroid"},[i("span",{class:"jlbinding"},"ComradeBase.centroid")],-1)),s[234]||(s[234]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[236]||(s[236]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">centroid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractIntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the image centroid aka the center of light of the image.</p><p>For polarized maps we return the centroid for Stokes I only.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[235]||(s[235]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L121-L127",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",bs,[i("summary",null,[s[237]||(s[237]=i("a",{id:"ComradeBase.second_moment",href:"#ComradeBase.second_moment"},[i("span",{class:"jlbinding"},"ComradeBase.second_moment")],-1)),s[238]||(s[238]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[241]||(s[241]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">second_moment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractIntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the image second moment tensor of the image. By default we really return the second <strong>cumulant</strong> or centered second moment, which is specified by the <code>center</code> argument.</p><p>For polarized maps we return the second moment for Stokes I only.</p>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[239]||(s[239]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L159-L167",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[242]||(s[242]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">second_moment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(im</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IntensityMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Computes the image second moment tensor of the image. By default we really return the second <strong>cumulant</strong> or centered second moment, which is specified by the <code>center</code> argument.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[240]||(s[240]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/images/methods.jl#L179-L185",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Ts,[i("summary",null,[s[243]||(s[243]=i("a",{id:"ComradeBase.stokes",href:"#ComradeBase.stokes"},[i("span",{class:"jlbinding"},"ComradeBase.stokes")],-1)),s[244]||(s[244]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[247]||(s[247]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stokes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractPolarizedModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extract the specific stokes component <code>p</code> from the polarized model <code>m</code></p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[245]||(s[245]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L66-L70",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1}),s[248]||(s[248]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">stokes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(m</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:StokesParams}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Symbol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Extract the specific stokes component <code>p</code> from the polarized image <code>m</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[246]||(s[246]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L278-L282",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[265]||(s[265]=i("h2",{id:"Internal-Methods-not-part-of-public-API",tabindex:"-1"},[t("Internal Methods not part of public API "),i("a",{class:"header-anchor",href:"#Internal-Methods-not-part-of-public-API","aria-label":'Permalink to "Internal Methods not part of public API {#Internal-Methods-not-part-of-public-API}"'},"​")],-1)),i("details",Cs,[i("summary",null,[s[249]||(s[249]=i("a",{id:"ComradeBase._visibilitymap",href:"#ComradeBase._visibilitymap"},[i("span",{class:"jlbinding"},"ComradeBase._visibilitymap")],-1)),s[250]||(s[250]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[252]||(s[252]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_visibilitymap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Internal method used for trait dispatch and unpacking of args arguments in <code>visibilities</code></p><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>Not part of the public API so it may change at any moment.</p></div>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[251]||(s[251]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L226-L233",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",fs,[i("summary",null,[s[253]||(s[253]=i("a",{id:"ComradeBase._visibilitymap!",href:"#ComradeBase._visibilitymap!"},[i("span",{class:"jlbinding"},"ComradeBase._visibilitymap!")],-1)),s[254]||(s[254]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[256]||(s[256]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_visibilitymap!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractModel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p)</span></span></code></pre></div><p>Internal method used for trait dispatch and unpacking of args arguments in <code>visibilities!</code></p><div class="tip custom-block"><p class="custom-block-title">Warn</p><p>Not part of the public API so it may change at any moment.</p></div>',3)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[255]||(s[255]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/interface.jl#L236-L243",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",Es,[i("summary",null,[s[257]||(s[257]=i("a",{id:"ComradeBase.create_map",href:"#ComradeBase.create_map"},[i("span",{class:"jlbinding"},"ComradeBase.create_map")],-1)),s[258]||(s[258]=t()),a(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[260]||(s[260]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(array, g</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractSingleDomain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a map of values specialized by the grid <code>g</code>.</p>',2)),a(e,{type:"info",class:"source-link",text:"source"},{default:n(()=>s[259]||(s[259]=[i("a",{href:"https://github.com/ptiede/ComradeBase.jl/blob/0aaf9b0488457342b5690bae32e88fd28c158cb6/src/domain.jl#L9-L13",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const Ds=p(h,[["render",_s]]);export{xs as __pageData,Ds as default};
